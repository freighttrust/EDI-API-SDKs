=begin
#EdiFabric API

#No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)

OpenAPI spec version: v1

Generated by: https://github.com/swagger-api/swagger-codegen.git
Swagger Codegen version: 2.4.4

=end

require 'spec_helper'
require 'json'

# Unit tests for SwaggerClient::ValidateApi
# Automatically generated by swagger-codegen (github.com/swagger-api/swagger-codegen)
# Please update as you see appropriate
describe 'ValidateApi' do
  before do
    # run before each test
    @instance = SwaggerClient::ValidateApi.new
  end

  after do
    # run after each test
  end

  describe 'test an instance of ValidateApi' do
    it 'should create an instance of ValidateApi' do
      expect(@instance).to be_instance_of(SwaggerClient::ValidateApi)
    end
  end

  # unit tests for validate_gs
  # @param [Hash] opts the optional parameters
  # @option opts [EdiFabricCoreModelEdiX12GS] :gs 
  # @return [Array<EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>]
  describe 'validate_gs test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_isa
  # @param [Hash] opts the optional parameters
  # @option opts [EdiFabricCoreModelEdiX12ISA] :isa 
  # @return [Array<EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>]
  describe 'validate_isa test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_transactions
  # @param [Hash] opts the optional parameters
  # @option opts [EdiFabricWebApiModelsValidateEdi] :validate_edi 
  # @return [EdiFabricCoreModelEdiErrorContextsMessageErrorContext]
  describe 'validate_transactions test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_unb
  # @param [Hash] opts the optional parameters
  # @option opts [EdiFabricCoreModelEdiEdifactUNB] :unb 
  # @return [Array<EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>]
  describe 'validate_unb test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

  # unit tests for validate_ung
  # @param [Hash] opts the optional parameters
  # @option opts [EdiFabricCoreModelEdiEdifactUNG] :ung 
  # @return [Array<EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>]
  describe 'validate_ung test' do
    it 'should work' do
      # assertion here. ref: https://www.relishapp.com/rspec/rspec-expectations/docs/built-in-matchers
    end
  end

end
