# coding: utf-8

"""
    EdiFabric API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EdiFabricWebApiModelsGenerateSettings(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'preserve_whitespace': 'bool',
        'auto_trailers': 'bool',
        'post_fix': 'str',
        'segment_separator': 'str',
        'component_data_element_separator': 'str',
        'escape_character': 'str',
        'data_element_separator': 'str',
        'repetition_separator': 'str',
        'decimal_point': 'str',
        'syntax_set': 'str',
        'char_set': 'str'
    }

    attribute_map = {
        'preserve_whitespace': 'preserve_whitespace',
        'auto_trailers': 'auto_trailers',
        'post_fix': 'post_fix',
        'segment_separator': 'segment_separator',
        'component_data_element_separator': 'component_data_element_separator',
        'escape_character': 'escape_character',
        'data_element_separator': 'data_element_separator',
        'repetition_separator': 'repetition_separator',
        'decimal_point': 'decimal_point',
        'syntax_set': 'syntax_set',
        'char_set': 'char_set'
    }

    def __init__(self, preserve_whitespace=None, auto_trailers=None, post_fix=None, segment_separator=None, component_data_element_separator=None, escape_character=None, data_element_separator=None, repetition_separator=None, decimal_point=None, syntax_set=None, char_set=None):  # noqa: E501
        """EdiFabricWebApiModelsGenerateSettings - a model defined in Swagger"""  # noqa: E501

        self._preserve_whitespace = None
        self._auto_trailers = None
        self._post_fix = None
        self._segment_separator = None
        self._component_data_element_separator = None
        self._escape_character = None
        self._data_element_separator = None
        self._repetition_separator = None
        self._decimal_point = None
        self._syntax_set = None
        self._char_set = None
        self.discriminator = None

        if preserve_whitespace is not None:
            self.preserve_whitespace = preserve_whitespace
        if auto_trailers is not None:
            self.auto_trailers = auto_trailers
        if post_fix is not None:
            self.post_fix = post_fix
        if segment_separator is not None:
            self.segment_separator = segment_separator
        if component_data_element_separator is not None:
            self.component_data_element_separator = component_data_element_separator
        if escape_character is not None:
            self.escape_character = escape_character
        if data_element_separator is not None:
            self.data_element_separator = data_element_separator
        if repetition_separator is not None:
            self.repetition_separator = repetition_separator
        if decimal_point is not None:
            self.decimal_point = decimal_point
        if syntax_set is not None:
            self.syntax_set = syntax_set
        if char_set is not None:
            self.char_set = char_set

    @property
    def preserve_whitespace(self):
        """Gets the preserve_whitespace of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The preserve_whitespace of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: bool
        """
        return self._preserve_whitespace

    @preserve_whitespace.setter
    def preserve_whitespace(self, preserve_whitespace):
        """Sets the preserve_whitespace of this EdiFabricWebApiModelsGenerateSettings.


        :param preserve_whitespace: The preserve_whitespace of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: bool
        """

        self._preserve_whitespace = preserve_whitespace

    @property
    def auto_trailers(self):
        """Gets the auto_trailers of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The auto_trailers of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: bool
        """
        return self._auto_trailers

    @auto_trailers.setter
    def auto_trailers(self, auto_trailers):
        """Sets the auto_trailers of this EdiFabricWebApiModelsGenerateSettings.


        :param auto_trailers: The auto_trailers of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: bool
        """

        self._auto_trailers = auto_trailers

    @property
    def post_fix(self):
        """Gets the post_fix of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The post_fix of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._post_fix

    @post_fix.setter
    def post_fix(self, post_fix):
        """Sets the post_fix of this EdiFabricWebApiModelsGenerateSettings.


        :param post_fix: The post_fix of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._post_fix = post_fix

    @property
    def segment_separator(self):
        """Gets the segment_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The segment_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._segment_separator

    @segment_separator.setter
    def segment_separator(self, segment_separator):
        """Sets the segment_separator of this EdiFabricWebApiModelsGenerateSettings.


        :param segment_separator: The segment_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._segment_separator = segment_separator

    @property
    def component_data_element_separator(self):
        """Gets the component_data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The component_data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._component_data_element_separator

    @component_data_element_separator.setter
    def component_data_element_separator(self, component_data_element_separator):
        """Sets the component_data_element_separator of this EdiFabricWebApiModelsGenerateSettings.


        :param component_data_element_separator: The component_data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._component_data_element_separator = component_data_element_separator

    @property
    def escape_character(self):
        """Gets the escape_character of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The escape_character of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._escape_character

    @escape_character.setter
    def escape_character(self, escape_character):
        """Sets the escape_character of this EdiFabricWebApiModelsGenerateSettings.


        :param escape_character: The escape_character of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._escape_character = escape_character

    @property
    def data_element_separator(self):
        """Gets the data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._data_element_separator

    @data_element_separator.setter
    def data_element_separator(self, data_element_separator):
        """Sets the data_element_separator of this EdiFabricWebApiModelsGenerateSettings.


        :param data_element_separator: The data_element_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._data_element_separator = data_element_separator

    @property
    def repetition_separator(self):
        """Gets the repetition_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The repetition_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._repetition_separator

    @repetition_separator.setter
    def repetition_separator(self, repetition_separator):
        """Sets the repetition_separator of this EdiFabricWebApiModelsGenerateSettings.


        :param repetition_separator: The repetition_separator of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._repetition_separator = repetition_separator

    @property
    def decimal_point(self):
        """Gets the decimal_point of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The decimal_point of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._decimal_point

    @decimal_point.setter
    def decimal_point(self, decimal_point):
        """Sets the decimal_point of this EdiFabricWebApiModelsGenerateSettings.


        :param decimal_point: The decimal_point of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._decimal_point = decimal_point

    @property
    def syntax_set(self):
        """Gets the syntax_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The syntax_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._syntax_set

    @syntax_set.setter
    def syntax_set(self, syntax_set):
        """Sets the syntax_set of this EdiFabricWebApiModelsGenerateSettings.


        :param syntax_set: The syntax_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._syntax_set = syntax_set

    @property
    def char_set(self):
        """Gets the char_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501


        :return: The char_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :rtype: str
        """
        return self._char_set

    @char_set.setter
    def char_set(self, char_set):
        """Sets the char_set of this EdiFabricWebApiModelsGenerateSettings.


        :param char_set: The char_set of this EdiFabricWebApiModelsGenerateSettings.  # noqa: E501
        :type: str
        """

        self._char_set = char_set

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EdiFabricWebApiModelsGenerateSettings, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdiFabricWebApiModelsGenerateSettings):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
