# coding: utf-8

"""
    EdiFabric API

    No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)  # noqa: E501

    OpenAPI spec version: v1
    
    Generated by: https://github.com/swagger-api/swagger-codegen.git
"""


import pprint
import re  # noqa: F401

import six


class EdiFabricCoreModelEdiEdifactS008(object):
    """NOTE: This class is auto generated by the swagger code generator program.

    Do not edit the class manually.
    """

    """
    Attributes:
      swagger_types (dict): The key is attribute name
                            and the value is attribute type.
      attribute_map (dict): The key is attribute name
                            and the value is json key in definition.
    """
    swagger_types = {
        'message_version_number_1': 'str',
        'message_release_number_2': 'str',
        'association_assigned_code_3': 'str'
    }

    attribute_map = {
        'message_version_number_1': 'messageVersionNumber_1',
        'message_release_number_2': 'messageReleaseNumber_2',
        'association_assigned_code_3': 'associationAssignedCode_3'
    }

    def __init__(self, message_version_number_1=None, message_release_number_2=None, association_assigned_code_3=None):  # noqa: E501
        """EdiFabricCoreModelEdiEdifactS008 - a model defined in Swagger"""  # noqa: E501

        self._message_version_number_1 = None
        self._message_release_number_2 = None
        self._association_assigned_code_3 = None
        self.discriminator = None

        if message_version_number_1 is not None:
            self.message_version_number_1 = message_version_number_1
        if message_release_number_2 is not None:
            self.message_release_number_2 = message_release_number_2
        if association_assigned_code_3 is not None:
            self.association_assigned_code_3 = association_assigned_code_3

    @property
    def message_version_number_1(self):
        """Gets the message_version_number_1 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501


        :return: The message_version_number_1 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :rtype: str
        """
        return self._message_version_number_1

    @message_version_number_1.setter
    def message_version_number_1(self, message_version_number_1):
        """Sets the message_version_number_1 of this EdiFabricCoreModelEdiEdifactS008.


        :param message_version_number_1: The message_version_number_1 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :type: str
        """

        self._message_version_number_1 = message_version_number_1

    @property
    def message_release_number_2(self):
        """Gets the message_release_number_2 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501


        :return: The message_release_number_2 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :rtype: str
        """
        return self._message_release_number_2

    @message_release_number_2.setter
    def message_release_number_2(self, message_release_number_2):
        """Sets the message_release_number_2 of this EdiFabricCoreModelEdiEdifactS008.


        :param message_release_number_2: The message_release_number_2 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :type: str
        """

        self._message_release_number_2 = message_release_number_2

    @property
    def association_assigned_code_3(self):
        """Gets the association_assigned_code_3 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501


        :return: The association_assigned_code_3 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :rtype: str
        """
        return self._association_assigned_code_3

    @association_assigned_code_3.setter
    def association_assigned_code_3(self, association_assigned_code_3):
        """Sets the association_assigned_code_3 of this EdiFabricCoreModelEdiEdifactS008.


        :param association_assigned_code_3: The association_assigned_code_3 of this EdiFabricCoreModelEdiEdifactS008.  # noqa: E501
        :type: str
        """

        self._association_assigned_code_3 = association_assigned_code_3

    def to_dict(self):
        """Returns the model properties as a dict"""
        result = {}

        for attr, _ in six.iteritems(self.swagger_types):
            value = getattr(self, attr)
            if isinstance(value, list):
                result[attr] = list(map(
                    lambda x: x.to_dict() if hasattr(x, "to_dict") else x,
                    value
                ))
            elif hasattr(value, "to_dict"):
                result[attr] = value.to_dict()
            elif isinstance(value, dict):
                result[attr] = dict(map(
                    lambda item: (item[0], item[1].to_dict())
                    if hasattr(item[1], "to_dict") else item,
                    value.items()
                ))
            else:
                result[attr] = value
        if issubclass(EdiFabricCoreModelEdiEdifactS008, dict):
            for key, value in self.items():
                result[key] = value

        return result

    def to_str(self):
        """Returns the string representation of the model"""
        return pprint.pformat(self.to_dict())

    def __repr__(self):
        """For `print` and `pprint`"""
        return self.to_str()

    def __eq__(self, other):
        """Returns true if both objects are equal"""
        if not isinstance(other, EdiFabricCoreModelEdiEdifactS008):
            return False

        return self.__dict__ == other.__dict__

    def __ne__(self, other):
        """Returns true if both objects are not equal"""
        return not self == other
