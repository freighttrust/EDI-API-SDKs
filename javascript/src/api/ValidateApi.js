/**
 * EdiFabric API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EdiFabricCoreModelEdiEdifactUNB', 'model/EdiFabricCoreModelEdiEdifactUNG', 'model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext', 'model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext', 'model/EdiFabricCoreModelEdiX12GS', 'model/EdiFabricCoreModelEdiX12ISA', 'model/EdiFabricWebApiModelsErrorDetails', 'model/EdiFabricWebApiModelsValidateEdi'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EdiFabricCoreModelEdiEdifactUNB'), require('../model/EdiFabricCoreModelEdiEdifactUNG'), require('../model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext'), require('../model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext'), require('../model/EdiFabricCoreModelEdiX12GS'), require('../model/EdiFabricCoreModelEdiX12ISA'), require('../model/EdiFabricWebApiModelsErrorDetails'), require('../model/EdiFabricWebApiModelsValidateEdi'));
  } else {
    // Browser globals (root is window)
    if (!root.EdiFabricApi) {
      root.EdiFabricApi = {};
    }
    root.EdiFabricApi.ValidateApi = factory(root.EdiFabricApi.ApiClient, root.EdiFabricApi.EdiFabricCoreModelEdiEdifactUNB, root.EdiFabricApi.EdiFabricCoreModelEdiEdifactUNG, root.EdiFabricApi.EdiFabricCoreModelEdiErrorContextsMessageErrorContext, root.EdiFabricApi.EdiFabricCoreModelEdiErrorContextsSegmentErrorContext, root.EdiFabricApi.EdiFabricCoreModelEdiX12GS, root.EdiFabricApi.EdiFabricCoreModelEdiX12ISA, root.EdiFabricApi.EdiFabricWebApiModelsErrorDetails, root.EdiFabricApi.EdiFabricWebApiModelsValidateEdi);
  }
}(this, function(ApiClient, EdiFabricCoreModelEdiEdifactUNB, EdiFabricCoreModelEdiEdifactUNG, EdiFabricCoreModelEdiErrorContextsMessageErrorContext, EdiFabricCoreModelEdiErrorContextsSegmentErrorContext, EdiFabricCoreModelEdiX12GS, EdiFabricCoreModelEdiX12ISA, EdiFabricWebApiModelsErrorDetails, EdiFabricWebApiModelsValidateEdi) {
  'use strict';

  /**
   * Validate service.
   * @module api/ValidateApi
   * @version v1
   */

  /**
   * Constructs a new ValidateApi. 
   * @alias module:api/ValidateApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the validateGs operation.
     * @callback module:api/ValidateApi~validateGsCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricCoreModelEdiX12GS} opts.gs 
     * @param {module:api/ValidateApi~validateGsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>}
     */
    this.validateGs = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['gs'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [EdiFabricCoreModelEdiErrorContextsSegmentErrorContext];

      return this.apiClient.callApi(
        '/validate/gs', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the validateIsa operation.
     * @callback module:api/ValidateApi~validateIsaCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricCoreModelEdiX12ISA} opts.isa 
     * @param {module:api/ValidateApi~validateIsaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>}
     */
    this.validateIsa = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['isa'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [EdiFabricCoreModelEdiErrorContextsSegmentErrorContext];

      return this.apiClient.callApi(
        '/validate/isa', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the validateTransactions operation.
     * @callback module:api/ValidateApi~validateTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {module:model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsValidateEdi} opts.validateEdi 
     * @param {module:api/ValidateApi~validateTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link module:model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext}
     */
    this.validateTransactions = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['validateEdi'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = EdiFabricCoreModelEdiErrorContextsMessageErrorContext;

      return this.apiClient.callApi(
        '/validate/transactions', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the validateUnb operation.
     * @callback module:api/ValidateApi~validateUnbCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricCoreModelEdiEdifactUNB} opts.unb 
     * @param {module:api/ValidateApi~validateUnbCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>}
     */
    this.validateUnb = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['unb'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [EdiFabricCoreModelEdiErrorContextsSegmentErrorContext];

      return this.apiClient.callApi(
        '/validate/unb', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the validateUng operation.
     * @callback module:api/ValidateApi~validateUngCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricCoreModelEdiEdifactUNG} opts.ung 
     * @param {module:api/ValidateApi~validateUngCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricCoreModelEdiErrorContextsSegmentErrorContext>}
     */
    this.validateUng = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['ung'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['text/plain', 'application/json', 'text/json', 'application/xml', 'text/xml'];
      var returnType = [EdiFabricCoreModelEdiErrorContextsSegmentErrorContext];

      return this.apiClient.callApi(
        '/validate/ung', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
