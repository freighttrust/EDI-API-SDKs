/**
 * EdiFabric API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EdiFabricWebApiModelsErrorDetails', 'model/EdiFabricWebApiModelsGenerateEdifactGroup', 'model/EdiFabricWebApiModelsGenerateEdifactInterchange', 'model/EdiFabricWebApiModelsGenerateEdifactTransactions', 'model/EdiFabricWebApiModelsGenerateGs', 'model/EdiFabricWebApiModelsGenerateIsa', 'model/EdiFabricWebApiModelsGenerateUnb', 'model/EdiFabricWebApiModelsGenerateUng', 'model/EdiFabricWebApiModelsGenerateX12Group', 'model/EdiFabricWebApiModelsGenerateX12Interchange', 'model/EdiFabricWebApiModelsGenerateX12Transactions'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EdiFabricWebApiModelsErrorDetails'), require('../model/EdiFabricWebApiModelsGenerateEdifactGroup'), require('../model/EdiFabricWebApiModelsGenerateEdifactInterchange'), require('../model/EdiFabricWebApiModelsGenerateEdifactTransactions'), require('../model/EdiFabricWebApiModelsGenerateGs'), require('../model/EdiFabricWebApiModelsGenerateIsa'), require('../model/EdiFabricWebApiModelsGenerateUnb'), require('../model/EdiFabricWebApiModelsGenerateUng'), require('../model/EdiFabricWebApiModelsGenerateX12Group'), require('../model/EdiFabricWebApiModelsGenerateX12Interchange'), require('../model/EdiFabricWebApiModelsGenerateX12Transactions'));
  } else {
    // Browser globals (root is window)
    if (!root.EdiFabricApi) {
      root.EdiFabricApi = {};
    }
    root.EdiFabricApi.GenerateApi = factory(root.EdiFabricApi.ApiClient, root.EdiFabricApi.EdiFabricWebApiModelsErrorDetails, root.EdiFabricApi.EdiFabricWebApiModelsGenerateEdifactGroup, root.EdiFabricApi.EdiFabricWebApiModelsGenerateEdifactInterchange, root.EdiFabricApi.EdiFabricWebApiModelsGenerateEdifactTransactions, root.EdiFabricApi.EdiFabricWebApiModelsGenerateGs, root.EdiFabricApi.EdiFabricWebApiModelsGenerateIsa, root.EdiFabricApi.EdiFabricWebApiModelsGenerateUnb, root.EdiFabricApi.EdiFabricWebApiModelsGenerateUng, root.EdiFabricApi.EdiFabricWebApiModelsGenerateX12Group, root.EdiFabricApi.EdiFabricWebApiModelsGenerateX12Interchange, root.EdiFabricApi.EdiFabricWebApiModelsGenerateX12Transactions);
  }
}(this, function(ApiClient, EdiFabricWebApiModelsErrorDetails, EdiFabricWebApiModelsGenerateEdifactGroup, EdiFabricWebApiModelsGenerateEdifactInterchange, EdiFabricWebApiModelsGenerateEdifactTransactions, EdiFabricWebApiModelsGenerateGs, EdiFabricWebApiModelsGenerateIsa, EdiFabricWebApiModelsGenerateUnb, EdiFabricWebApiModelsGenerateUng, EdiFabricWebApiModelsGenerateX12Group, EdiFabricWebApiModelsGenerateX12Interchange, EdiFabricWebApiModelsGenerateX12Transactions) {
  'use strict';

  /**
   * Generate service.
   * @module api/GenerateApi
   * @version v1
   */

  /**
   * Constructs a new GenerateApi. 
   * @alias module:api/GenerateApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the generateEdifactGroup operation.
     * @callback module:api/GenerateApi~generateEdifactGroupCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateEdifactGroup} opts.generateEdifactGroup 
     * @param {module:api/GenerateApi~generateEdifactGroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateEdifactGroup = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateEdifactGroup'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/edifact-group', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateEdifactInterchange operation.
     * @callback module:api/GenerateApi~generateEdifactInterchangeCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateEdifactInterchange} opts.generateEdifactInterchange 
     * @param {module:api/GenerateApi~generateEdifactInterchangeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateEdifactInterchange = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateEdifactInterchange'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/edifact-interchange', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateEdifactTransactions operation.
     * @callback module:api/GenerateApi~generateEdifactTransactionsCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateEdifactTransactions} opts.generateEdifactTransactions 
     * @param {module:api/GenerateApi~generateEdifactTransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateEdifactTransactions = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateEdifactTransactions'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/edifact-transactions', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateGs operation.
     * @callback module:api/GenerateApi~generateGsCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateGs} opts.generateGs 
     * @param {module:api/GenerateApi~generateGsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateGs = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateGs'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/gs', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateIsa operation.
     * @callback module:api/GenerateApi~generateIsaCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateIsa} opts.generateIsa 
     * @param {module:api/GenerateApi~generateIsaCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateIsa = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateIsa'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/isa', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateUnb operation.
     * @callback module:api/GenerateApi~generateUnbCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateUnb} opts.generateUnb 
     * @param {module:api/GenerateApi~generateUnbCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateUnb = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateUnb'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/unb', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateUng operation.
     * @callback module:api/GenerateApi~generateUngCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateUng} opts.generateUng 
     * @param {module:api/GenerateApi~generateUngCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateUng = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateUng'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/ung', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateX12Group operation.
     * @callback module:api/GenerateApi~generateX12GroupCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateX12Group} opts.generateX12Group 
     * @param {module:api/GenerateApi~generateX12GroupCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateX12Group = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateX12Group'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/x12-group', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateX12Interchange operation.
     * @callback module:api/GenerateApi~generateX12InterchangeCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateX12Interchange} opts.generateX12Interchange 
     * @param {module:api/GenerateApi~generateX12InterchangeCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateX12Interchange = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateX12Interchange'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/x12-interchange', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the generateX12Transactions operation.
     * @callback module:api/GenerateApi~generateX12TransactionsCallback
     * @param {String} error Error message, if any.
     * @param {File} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {Object} opts Optional parameters
     * @param {module:model/EdiFabricWebApiModelsGenerateX12Transactions} opts.generateX12Transactions 
     * @param {module:api/GenerateApi~generateX12TransactionsCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link File}
     */
    this.generateX12Transactions = function(opts, callback) {
      opts = opts || {};
      var postBody = opts['generateX12Transactions'];


      var pathParams = {
      };
      var queryParams = {
      };
      var collectionQueryParams = {
      };
      var headerParams = {
      };
      var formParams = {
      };

      var authNames = [];
      var contentTypes = ['application/json-patch+json', 'application/json', 'text/json', 'application/_*+json', 'application/xml', 'text/xml', 'application/_*+xml'];
      var accepts = ['application/octet-stream', 'application/json'];
      var returnType = File;

      return this.apiClient.callApi(
        '/generate/x12-transactions', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
