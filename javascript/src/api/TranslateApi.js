/**
 * EdiFabric API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EdiFabricWebApiModelsEdifactInterchange', 'model/EdiFabricWebApiModelsErrorDetails', 'model/EdiFabricWebApiModelsX12Interchange'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('../model/EdiFabricWebApiModelsEdifactInterchange'), require('../model/EdiFabricWebApiModelsErrorDetails'), require('../model/EdiFabricWebApiModelsX12Interchange'));
  } else {
    // Browser globals (root is window)
    if (!root.EdiFabricApi) {
      root.EdiFabricApi = {};
    }
    root.EdiFabricApi.TranslateApi = factory(root.EdiFabricApi.ApiClient, root.EdiFabricApi.EdiFabricWebApiModelsEdifactInterchange, root.EdiFabricApi.EdiFabricWebApiModelsErrorDetails, root.EdiFabricApi.EdiFabricWebApiModelsX12Interchange);
  }
}(this, function(ApiClient, EdiFabricWebApiModelsEdifactInterchange, EdiFabricWebApiModelsErrorDetails, EdiFabricWebApiModelsX12Interchange) {
  'use strict';

  /**
   * Translate service.
   * @module api/TranslateApi
   * @version v1
   */

  /**
   * Constructs a new TranslateApi. 
   * @alias module:api/TranslateApi
   * @class
   * @param {module:ApiClient} [apiClient] Optional API client implementation to use,
   * default to {@link module:ApiClient#instance} if unspecified.
   */
  var exports = function(apiClient) {
    this.apiClient = apiClient || ApiClient.instance;


    /**
     * Callback function to receive the result of the translateEdifact operation.
     * @callback module:api/TranslateApi~translateEdifactCallback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricWebApiModelsEdifactInterchange>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {File} ediFile EDI file to translate
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.readMode  (default to read_small)
     * @param {Boolean} opts.validate  (default to false)
     * @param {module:model/String} opts.accept  (default to application/json)
     * @param {String} opts.charSet  (default to utf-8)
     * @param {Boolean} opts.continueOnError  (default to true)
     * @param {Boolean} opts.transactionOnly  (default to false)
     * @param {String} opts.dataElementSeparator  (default to +)
     * @param {String} opts.componentDataElementSeparator  (default to :)
     * @param {String} opts.segmentSeparator  (default to &#39;)
     * @param {String} opts.repetitionSeparator  (default to *)
     * @param {String} opts.escapeCharacter  (default to ?)
     * @param {module:model/String} opts.decimalPoint  (default to .)
     * @param {module:model/String} opts.eancomSyntax 
     * @param {Boolean} opts.skipTrailerValidation  (default to false)
     * @param {module:model/String} opts.syntaxSet 
     * @param {module:api/TranslateApi~translateEdifactCallback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricWebApiModelsEdifactInterchange>}
     */
    this.translateEdifact = function(ediFile, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'ediFile' is set
      if (ediFile === undefined || ediFile === null) {
        throw new Error("Missing the required parameter 'ediFile' when calling translateEdifact");
      }


      var pathParams = {
      };
      var queryParams = {
        'read_mode': opts['readMode'],
        'validate': opts['validate'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
        'char_set': opts['charSet'],
        'continue_on_error': opts['continueOnError'],
        'transaction_only': opts['transactionOnly'],
        'data_element_separator': opts['dataElementSeparator'],
        'component_data_element_separator': opts['componentDataElementSeparator'],
        'segment_separator': opts['segmentSeparator'],
        'repetition_separator': opts['repetitionSeparator'],
        'escape_character': opts['escapeCharacter'],
        'decimal_point': opts['decimalPoint'],
        'eancom_syntax': opts['eancomSyntax'],
        'skip_trailer_validation': opts['skipTrailerValidation'],
        'syntax_set': opts['syntaxSet'],
        'edi_file': ediFile
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = [EdiFabricWebApiModelsEdifactInterchange];

      return this.apiClient.callApi(
        '/translate/edifact', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }

    /**
     * Callback function to receive the result of the translateX12 operation.
     * @callback module:api/TranslateApi~translateX12Callback
     * @param {String} error Error message, if any.
     * @param {Array.<module:model/EdiFabricWebApiModelsX12Interchange>} data The data returned by the service call.
     * @param {String} response The complete HTTP response.
     */

    /**
     * @param {File} ediFile EDI file to translate
     * @param {Object} opts Optional parameters
     * @param {module:model/String} opts.readMode  (default to read_small)
     * @param {Boolean} opts.validate  (default to false)
     * @param {module:model/String} opts.accept  (default to application/json)
     * @param {String} opts.charSet  (default to utf-8)
     * @param {Boolean} opts.continueOnError  (default to true)
     * @param {Boolean} opts.transactionOnly  (default to false)
     * @param {String} opts.dataElementSeparator  (default to *)
     * @param {String} opts.componentDataElementSeparator  (default to &gt;)
     * @param {String} opts.segmentSeparator  (default to ~)
     * @param {String} opts.repetitionSeparator  (default to ^)
     * @param {Boolean} opts.skipTrailerValidation  (default to false)
     * @param {module:model/String} opts.syntaxSet 
     * @param {module:api/TranslateApi~translateX12Callback} callback The callback function, accepting three arguments: error, data, response
     * data is of type: {@link Array.<module:model/EdiFabricWebApiModelsX12Interchange>}
     */
    this.translateX12 = function(ediFile, opts, callback) {
      opts = opts || {};
      var postBody = null;

      // verify the required parameter 'ediFile' is set
      if (ediFile === undefined || ediFile === null) {
        throw new Error("Missing the required parameter 'ediFile' when calling translateX12");
      }


      var pathParams = {
      };
      var queryParams = {
        'read_mode': opts['readMode'],
        'validate': opts['validate'],
      };
      var collectionQueryParams = {
      };
      var headerParams = {
        'Accept': opts['accept']
      };
      var formParams = {
        'char_set': opts['charSet'],
        'continue_on_error': opts['continueOnError'],
        'transaction_only': opts['transactionOnly'],
        'data_element_separator': opts['dataElementSeparator'],
        'component_data_element_separator': opts['componentDataElementSeparator'],
        'segment_separator': opts['segmentSeparator'],
        'repetition_separator': opts['repetitionSeparator'],
        'skip_trailer_validation': opts['skipTrailerValidation'],
        'syntax_set': opts['syntaxSet'],
        'edi_file': ediFile
      };

      var authNames = [];
      var contentTypes = ['multipart/form-data'];
      var accepts = ['application/json', 'application/xml'];
      var returnType = [EdiFabricWebApiModelsX12Interchange];

      return this.apiClient.callApi(
        '/translate/x12', 'POST',
        pathParams, queryParams, collectionQueryParams, headerParams, formParams, postBody,
        authNames, contentTypes, accepts, returnType, callback
      );
    }
  };

  return exports;
}));
