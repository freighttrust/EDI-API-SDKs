/**
 * EdiFabric API
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 *
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen.git
 *
 * Swagger Codegen version: 2.4.4
 *
 * Do not edit the class manually.
 *
 */

(function(root, factory) {
  if (typeof define === 'function' && define.amd) {
    // AMD. Register as an anonymous module.
    define(['ApiClient', 'model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext'], factory);
  } else if (typeof module === 'object' && module.exports) {
    // CommonJS-like environments that support module.exports, like Node.
    module.exports = factory(require('../ApiClient'), require('./EdiFabricCoreModelEdiErrorContextsMessageErrorContext'));
  } else {
    // Browser globals (root is window)
    if (!root.EdiFabricApi) {
      root.EdiFabricApi = {};
    }
    root.EdiFabricApi.EdiFabricCoreModelEdiErrorContextsReaderErrorContext = factory(root.EdiFabricApi.ApiClient, root.EdiFabricApi.EdiFabricCoreModelEdiErrorContextsMessageErrorContext);
  }
}(this, function(ApiClient, EdiFabricCoreModelEdiErrorContextsMessageErrorContext) {
  'use strict';




  /**
   * The EdiFabricCoreModelEdiErrorContextsReaderErrorContext model module.
   * @module model/EdiFabricCoreModelEdiErrorContextsReaderErrorContext
   * @version v1
   */

  /**
   * Constructs a new <code>EdiFabricCoreModelEdiErrorContextsReaderErrorContext</code>.
   * @alias module:model/EdiFabricCoreModelEdiErrorContextsReaderErrorContext
   * @class
   */
  var exports = function() {
    var _this = this;




  };

  /**
   * Constructs a <code>EdiFabricCoreModelEdiErrorContextsReaderErrorContext</code> from a plain JavaScript object, optionally creating a new instance.
   * Copies all relevant properties from <code>data</code> to <code>obj</code> if supplied or a new instance if not.
   * @param {Object} data The plain JavaScript object bearing properties of interest.
   * @param {module:model/EdiFabricCoreModelEdiErrorContextsReaderErrorContext} obj Optional instance to populate.
   * @return {module:model/EdiFabricCoreModelEdiErrorContextsReaderErrorContext} The populated <code>EdiFabricCoreModelEdiErrorContextsReaderErrorContext</code> instance.
   */
  exports.constructFromObject = function(data, obj) {
    if (data) {
      obj = obj || new exports();

      if (data.hasOwnProperty('readerErrorCode')) {
        obj['readerErrorCode'] = ApiClient.convertToType(data['readerErrorCode'], 'String');
      }
      if (data.hasOwnProperty('messageErrorContext')) {
        obj['messageErrorContext'] = EdiFabricCoreModelEdiErrorContextsMessageErrorContext.constructFromObject(data['messageErrorContext']);
      }
      if (data.hasOwnProperty('message')) {
        obj['message'] = ApiClient.convertToType(data['message'], 'String');
      }
    }
    return obj;
  }

  /**
   * @member {module:model/EdiFabricCoreModelEdiErrorContextsReaderErrorContext.ReaderErrorCodeEnum} readerErrorCode
   */
  exports.prototype['readerErrorCode'] = undefined;
  /**
   * @member {module:model/EdiFabricCoreModelEdiErrorContextsMessageErrorContext} messageErrorContext
   */
  exports.prototype['messageErrorContext'] = undefined;
  /**
   * @member {String} message
   */
  exports.prototype['message'] = undefined;


  /**
   * Allowed values for the <code>readerErrorCode</code> property.
   * @enum {String}
   * @readonly
   */
  exports.ReaderErrorCodeEnum = {
    /**
     * value: "Unknown"
     * @const
     */
    "Unknown": "Unknown",
    /**
     * value: "InvalidSpecOrAssembly"
     * @const
     */
    "InvalidSpecOrAssembly": "InvalidSpecOrAssembly",
    /**
     * value: "InvalidControlStructure"
     * @const
     */
    "InvalidControlStructure": "InvalidControlStructure",
    /**
     * value: "ImproperEndOfFile"
     * @const
     */
    "ImproperEndOfFile": "ImproperEndOfFile",
    /**
     * value: "InvalidInterchangeContent"
     * @const
     */
    "InvalidInterchangeContent": "InvalidInterchangeContent",
    /**
     * value: "DemoVersion"
     * @const
     */
    "DemoVersion": "DemoVersion"  };


  return exports;
}));


