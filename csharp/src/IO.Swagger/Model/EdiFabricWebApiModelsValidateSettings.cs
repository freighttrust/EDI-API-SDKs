/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricWebApiModelsValidateSettings
    /// </summary>
    [DataContract]
    public partial class EdiFabricWebApiModelsValidateSettings :  IEquatable<EdiFabricWebApiModelsValidateSettings>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricWebApiModelsValidateSettings" /> class.
        /// </summary>
        /// <param name="syntaxSet">syntaxSet.</param>
        /// <param name="decimalPoint">decimalPoint.</param>
        /// <param name="skipTrailerValidation">skipTrailerValidation.</param>
        public EdiFabricWebApiModelsValidateSettings(string syntaxSet = default(string), string decimalPoint = default(string), bool? skipTrailerValidation = default(bool?))
        {
            this.SyntaxSet = syntaxSet;
            this.DecimalPoint = decimalPoint;
            this.SkipTrailerValidation = skipTrailerValidation;
        }
        
        /// <summary>
        /// Gets or Sets SyntaxSet
        /// </summary>
        [DataMember(Name="syntax_set", EmitDefaultValue=false)]
        public string SyntaxSet { get; set; }

        /// <summary>
        /// Gets or Sets DecimalPoint
        /// </summary>
        [DataMember(Name="decimal_point", EmitDefaultValue=false)]
        public string DecimalPoint { get; set; }

        /// <summary>
        /// Gets or Sets SkipTrailerValidation
        /// </summary>
        [DataMember(Name="skip_trailer_validation", EmitDefaultValue=false)]
        public bool? SkipTrailerValidation { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricWebApiModelsValidateSettings {\n");
            sb.Append("  SyntaxSet: ").Append(SyntaxSet).Append("\n");
            sb.Append("  DecimalPoint: ").Append(DecimalPoint).Append("\n");
            sb.Append("  SkipTrailerValidation: ").Append(SkipTrailerValidation).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricWebApiModelsValidateSettings);
        }

        /// <summary>
        /// Returns true if EdiFabricWebApiModelsValidateSettings instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricWebApiModelsValidateSettings to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricWebApiModelsValidateSettings input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SyntaxSet == input.SyntaxSet ||
                    (this.SyntaxSet != null &&
                    this.SyntaxSet.Equals(input.SyntaxSet))
                ) && 
                (
                    this.DecimalPoint == input.DecimalPoint ||
                    (this.DecimalPoint != null &&
                    this.DecimalPoint.Equals(input.DecimalPoint))
                ) && 
                (
                    this.SkipTrailerValidation == input.SkipTrailerValidation ||
                    (this.SkipTrailerValidation != null &&
                    this.SkipTrailerValidation.Equals(input.SkipTrailerValidation))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SyntaxSet != null)
                    hashCode = hashCode * 59 + this.SyntaxSet.GetHashCode();
                if (this.DecimalPoint != null)
                    hashCode = hashCode * 59 + this.DecimalPoint.GetHashCode();
                if (this.SkipTrailerValidation != null)
                    hashCode = hashCode * 59 + this.SkipTrailerValidation.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
