/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricCoreModelEdiEdifactUNE
    /// </summary>
    [DataContract]
    public partial class EdiFabricCoreModelEdiEdifactUNE :  IEquatable<EdiFabricCoreModelEdiEdifactUNE>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricCoreModelEdiEdifactUNE" /> class.
        /// </summary>
        /// <param name="groupControlCount1">groupControlCount1.</param>
        /// <param name="groupReferenceNumber2">groupReferenceNumber2.</param>
        public EdiFabricCoreModelEdiEdifactUNE(string groupControlCount1 = default(string), string groupReferenceNumber2 = default(string))
        {
            this.GroupControlCount1 = groupControlCount1;
            this.GroupReferenceNumber2 = groupReferenceNumber2;
        }
        
        /// <summary>
        /// Gets or Sets GroupControlCount1
        /// </summary>
        [DataMember(Name="groupControlCount_1", EmitDefaultValue=false)]
        public string GroupControlCount1 { get; set; }

        /// <summary>
        /// Gets or Sets GroupReferenceNumber2
        /// </summary>
        [DataMember(Name="groupReferenceNumber_2", EmitDefaultValue=false)]
        public string GroupReferenceNumber2 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricCoreModelEdiEdifactUNE {\n");
            sb.Append("  GroupControlCount1: ").Append(GroupControlCount1).Append("\n");
            sb.Append("  GroupReferenceNumber2: ").Append(GroupReferenceNumber2).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricCoreModelEdiEdifactUNE);
        }

        /// <summary>
        /// Returns true if EdiFabricCoreModelEdiEdifactUNE instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricCoreModelEdiEdifactUNE to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricCoreModelEdiEdifactUNE input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.GroupControlCount1 == input.GroupControlCount1 ||
                    (this.GroupControlCount1 != null &&
                    this.GroupControlCount1.Equals(input.GroupControlCount1))
                ) && 
                (
                    this.GroupReferenceNumber2 == input.GroupReferenceNumber2 ||
                    (this.GroupReferenceNumber2 != null &&
                    this.GroupReferenceNumber2.Equals(input.GroupReferenceNumber2))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.GroupControlCount1 != null)
                    hashCode = hashCode * 59 + this.GroupControlCount1.GetHashCode();
                if (this.GroupReferenceNumber2 != null)
                    hashCode = hashCode * 59 + this.GroupReferenceNumber2.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
