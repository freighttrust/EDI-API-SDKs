/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricWebApiModelsX12Interchange
    /// </summary>
    [DataContract]
    public partial class EdiFabricWebApiModelsX12Interchange :  IEquatable<EdiFabricWebApiModelsX12Interchange>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricWebApiModelsX12Interchange" /> class.
        /// </summary>
        /// <param name="isa">isa.</param>
        /// <param name="groups">groups.</param>
        /// <param name="ieaTrailers">ieaTrailers.</param>
        /// <param name="errors">errors.</param>
        public EdiFabricWebApiModelsX12Interchange(EdiFabricCoreModelEdiX12ISA isa = default(EdiFabricCoreModelEdiX12ISA), List<EdiFabricWebApiModelsX12Group> groups = default(List<EdiFabricWebApiModelsX12Group>), List<EdiFabricCoreModelEdiX12IEA> ieaTrailers = default(List<EdiFabricCoreModelEdiX12IEA>), List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext> errors = default(List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext>))
        {
            this.Isa = isa;
            this.Groups = groups;
            this.IeaTrailers = ieaTrailers;
            this.Errors = errors;
        }
        
        /// <summary>
        /// Gets or Sets Isa
        /// </summary>
        [DataMember(Name="isa", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiX12ISA Isa { get; set; }

        /// <summary>
        /// Gets or Sets Groups
        /// </summary>
        [DataMember(Name="groups", EmitDefaultValue=false)]
        public List<EdiFabricWebApiModelsX12Group> Groups { get; set; }

        /// <summary>
        /// Gets or Sets IeaTrailers
        /// </summary>
        [DataMember(Name="ieaTrailers", EmitDefaultValue=false)]
        public List<EdiFabricCoreModelEdiX12IEA> IeaTrailers { get; set; }

        /// <summary>
        /// Gets or Sets Errors
        /// </summary>
        [DataMember(Name="errors", EmitDefaultValue=false)]
        public List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricWebApiModelsX12Interchange {\n");
            sb.Append("  Isa: ").Append(Isa).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  IeaTrailers: ").Append(IeaTrailers).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricWebApiModelsX12Interchange);
        }

        /// <summary>
        /// Returns true if EdiFabricWebApiModelsX12Interchange instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricWebApiModelsX12Interchange to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricWebApiModelsX12Interchange input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Isa == input.Isa ||
                    (this.Isa != null &&
                    this.Isa.Equals(input.Isa))
                ) && 
                (
                    this.Groups == input.Groups ||
                    this.Groups != null &&
                    this.Groups.SequenceEqual(input.Groups)
                ) && 
                (
                    this.IeaTrailers == input.IeaTrailers ||
                    this.IeaTrailers != null &&
                    this.IeaTrailers.SequenceEqual(input.IeaTrailers)
                ) && 
                (
                    this.Errors == input.Errors ||
                    this.Errors != null &&
                    this.Errors.SequenceEqual(input.Errors)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Isa != null)
                    hashCode = hashCode * 59 + this.Isa.GetHashCode();
                if (this.Groups != null)
                    hashCode = hashCode * 59 + this.Groups.GetHashCode();
                if (this.IeaTrailers != null)
                    hashCode = hashCode * 59 + this.IeaTrailers.GetHashCode();
                if (this.Errors != null)
                    hashCode = hashCode * 59 + this.Errors.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
