/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricCoreModelEdiErrorContextsDataElementErrorContext
    /// </summary>
    [DataContract]
    public partial class EdiFabricCoreModelEdiErrorContextsDataElementErrorContext :  IEquatable<EdiFabricCoreModelEdiErrorContextsDataElementErrorContext>, IValidatableObject
    {
        /// <summary>
        /// Defines Code
        /// </summary>
        [JsonConverter(typeof(StringEnumConverter))]
        public enum CodeEnum
        {
            
            /// <summary>
            /// Enum RequiredDataElementMissing for value: RequiredDataElementMissing
            /// </summary>
            [EnumMember(Value = "RequiredDataElementMissing")]
            RequiredDataElementMissing = 1,
            
            /// <summary>
            /// Enum ConditionalRequiredDataElementMissing for value: ConditionalRequiredDataElementMissing
            /// </summary>
            [EnumMember(Value = "ConditionalRequiredDataElementMissing")]
            ConditionalRequiredDataElementMissing = 2,
            
            /// <summary>
            /// Enum TooManyDataElements for value: TooManyDataElements
            /// </summary>
            [EnumMember(Value = "TooManyDataElements")]
            TooManyDataElements = 3,
            
            /// <summary>
            /// Enum DataElementTooShort for value: DataElementTooShort
            /// </summary>
            [EnumMember(Value = "DataElementTooShort")]
            DataElementTooShort = 4,
            
            /// <summary>
            /// Enum DataElementTooLong for value: DataElementTooLong
            /// </summary>
            [EnumMember(Value = "DataElementTooLong")]
            DataElementTooLong = 5,
            
            /// <summary>
            /// Enum InvalidCharacterInDataElement for value: InvalidCharacterInDataElement
            /// </summary>
            [EnumMember(Value = "InvalidCharacterInDataElement")]
            InvalidCharacterInDataElement = 6,
            
            /// <summary>
            /// Enum InvalidCodeValue for value: InvalidCodeValue
            /// </summary>
            [EnumMember(Value = "InvalidCodeValue")]
            InvalidCodeValue = 7,
            
            /// <summary>
            /// Enum InvalidDate for value: InvalidDate
            /// </summary>
            [EnumMember(Value = "InvalidDate")]
            InvalidDate = 8,
            
            /// <summary>
            /// Enum InvalidTime for value: InvalidTime
            /// </summary>
            [EnumMember(Value = "InvalidTime")]
            InvalidTime = 9,
            
            /// <summary>
            /// Enum ExclusionConditionViolated for value: ExclusionConditionViolated
            /// </summary>
            [EnumMember(Value = "ExclusionConditionViolated")]
            ExclusionConditionViolated = 10,
            
            /// <summary>
            /// Enum TooManyRepetitions for value: TooManyRepetitions
            /// </summary>
            [EnumMember(Value = "TooManyRepetitions")]
            TooManyRepetitions = 11,
            
            /// <summary>
            /// Enum TooManyComponents for value: TooManyComponents
            /// </summary>
            [EnumMember(Value = "TooManyComponents")]
            TooManyComponents = 12,
            
            /// <summary>
            /// Enum TooFewRepetitions for value: TooFewRepetitions
            /// </summary>
            [EnumMember(Value = "TooFewRepetitions")]
            TooFewRepetitions = 13
        }

        /// <summary>
        /// Gets or Sets Code
        /// </summary>
        [DataMember(Name="code", EmitDefaultValue=false)]
        public CodeEnum? Code { get; set; }
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricCoreModelEdiErrorContextsDataElementErrorContext" /> class.
        /// </summary>
        /// <param name="name">name.</param>
        /// <param name="position">position.</param>
        /// <param name="code">code.</param>
        /// <param name="value">value.</param>
        /// <param name="componentPosition">componentPosition.</param>
        /// <param name="repetitionPosition">repetitionPosition.</param>
        /// <param name="message">message.</param>
        public EdiFabricCoreModelEdiErrorContextsDataElementErrorContext(string name = default(string), int? position = default(int?), CodeEnum? code = default(CodeEnum?), string value = default(string), int? componentPosition = default(int?), int? repetitionPosition = default(int?), string message = default(string))
        {
            this.Name = name;
            this.Position = position;
            this.Code = code;
            this.Value = value;
            this.ComponentPosition = componentPosition;
            this.RepetitionPosition = repetitionPosition;
            this.Message = message;
        }
        
        /// <summary>
        /// Gets or Sets Name
        /// </summary>
        [DataMember(Name="name", EmitDefaultValue=false)]
        public string Name { get; set; }

        /// <summary>
        /// Gets or Sets Position
        /// </summary>
        [DataMember(Name="position", EmitDefaultValue=false)]
        public int? Position { get; set; }


        /// <summary>
        /// Gets or Sets Value
        /// </summary>
        [DataMember(Name="value", EmitDefaultValue=false)]
        public string Value { get; set; }

        /// <summary>
        /// Gets or Sets ComponentPosition
        /// </summary>
        [DataMember(Name="componentPosition", EmitDefaultValue=false)]
        public int? ComponentPosition { get; set; }

        /// <summary>
        /// Gets or Sets RepetitionPosition
        /// </summary>
        [DataMember(Name="repetitionPosition", EmitDefaultValue=false)]
        public int? RepetitionPosition { get; set; }

        /// <summary>
        /// Gets or Sets Message
        /// </summary>
        [DataMember(Name="message", EmitDefaultValue=false)]
        public string Message { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricCoreModelEdiErrorContextsDataElementErrorContext {\n");
            sb.Append("  Name: ").Append(Name).Append("\n");
            sb.Append("  Position: ").Append(Position).Append("\n");
            sb.Append("  Code: ").Append(Code).Append("\n");
            sb.Append("  Value: ").Append(Value).Append("\n");
            sb.Append("  ComponentPosition: ").Append(ComponentPosition).Append("\n");
            sb.Append("  RepetitionPosition: ").Append(RepetitionPosition).Append("\n");
            sb.Append("  Message: ").Append(Message).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricCoreModelEdiErrorContextsDataElementErrorContext);
        }

        /// <summary>
        /// Returns true if EdiFabricCoreModelEdiErrorContextsDataElementErrorContext instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricCoreModelEdiErrorContextsDataElementErrorContext to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricCoreModelEdiErrorContextsDataElementErrorContext input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Name == input.Name ||
                    (this.Name != null &&
                    this.Name.Equals(input.Name))
                ) && 
                (
                    this.Position == input.Position ||
                    (this.Position != null &&
                    this.Position.Equals(input.Position))
                ) && 
                (
                    this.Code == input.Code ||
                    (this.Code != null &&
                    this.Code.Equals(input.Code))
                ) && 
                (
                    this.Value == input.Value ||
                    (this.Value != null &&
                    this.Value.Equals(input.Value))
                ) && 
                (
                    this.ComponentPosition == input.ComponentPosition ||
                    (this.ComponentPosition != null &&
                    this.ComponentPosition.Equals(input.ComponentPosition))
                ) && 
                (
                    this.RepetitionPosition == input.RepetitionPosition ||
                    (this.RepetitionPosition != null &&
                    this.RepetitionPosition.Equals(input.RepetitionPosition))
                ) && 
                (
                    this.Message == input.Message ||
                    (this.Message != null &&
                    this.Message.Equals(input.Message))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Name != null)
                    hashCode = hashCode * 59 + this.Name.GetHashCode();
                if (this.Position != null)
                    hashCode = hashCode * 59 + this.Position.GetHashCode();
                if (this.Code != null)
                    hashCode = hashCode * 59 + this.Code.GetHashCode();
                if (this.Value != null)
                    hashCode = hashCode * 59 + this.Value.GetHashCode();
                if (this.ComponentPosition != null)
                    hashCode = hashCode * 59 + this.ComponentPosition.GetHashCode();
                if (this.RepetitionPosition != null)
                    hashCode = hashCode * 59 + this.RepetitionPosition.GetHashCode();
                if (this.Message != null)
                    hashCode = hashCode * 59 + this.Message.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
