/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricCoreModelEdiX12ISA
    /// </summary>
    [DataContract]
    public partial class EdiFabricCoreModelEdiX12ISA :  IEquatable<EdiFabricCoreModelEdiX12ISA>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricCoreModelEdiX12ISA" /> class.
        /// </summary>
        /// <param name="authorizationInformationQualifier1">authorizationInformationQualifier1.</param>
        /// <param name="authorizationInformation2">authorizationInformation2.</param>
        /// <param name="securityInformationQualifier3">securityInformationQualifier3.</param>
        /// <param name="securityInformation4">securityInformation4.</param>
        /// <param name="senderIDQualifier5">senderIDQualifier5.</param>
        /// <param name="interchangeSenderID6">interchangeSenderID6.</param>
        /// <param name="receiverIDQualifier7">receiverIDQualifier7.</param>
        /// <param name="interchangeReceiverID8">interchangeReceiverID8.</param>
        /// <param name="interchangeDate9">interchangeDate9.</param>
        /// <param name="interchangeTime10">interchangeTime10.</param>
        /// <param name="interchangeControlStandardsIdentifier11">interchangeControlStandardsIdentifier11.</param>
        /// <param name="interchangeControlVersionNumber12">interchangeControlVersionNumber12.</param>
        /// <param name="interchangeControlNumber13">interchangeControlNumber13.</param>
        /// <param name="acknowledgementRequested14">acknowledgementRequested14.</param>
        /// <param name="usageIndicator15">usageIndicator15.</param>
        /// <param name="componentElementSeparator16">componentElementSeparator16.</param>
        public EdiFabricCoreModelEdiX12ISA(string authorizationInformationQualifier1 = default(string), string authorizationInformation2 = default(string), string securityInformationQualifier3 = default(string), string securityInformation4 = default(string), string senderIDQualifier5 = default(string), string interchangeSenderID6 = default(string), string receiverIDQualifier7 = default(string), string interchangeReceiverID8 = default(string), string interchangeDate9 = default(string), string interchangeTime10 = default(string), string interchangeControlStandardsIdentifier11 = default(string), string interchangeControlVersionNumber12 = default(string), string interchangeControlNumber13 = default(string), string acknowledgementRequested14 = default(string), string usageIndicator15 = default(string), string componentElementSeparator16 = default(string))
        {
            this.AuthorizationInformationQualifier1 = authorizationInformationQualifier1;
            this.AuthorizationInformation2 = authorizationInformation2;
            this.SecurityInformationQualifier3 = securityInformationQualifier3;
            this.SecurityInformation4 = securityInformation4;
            this.SenderIDQualifier5 = senderIDQualifier5;
            this.InterchangeSenderID6 = interchangeSenderID6;
            this.ReceiverIDQualifier7 = receiverIDQualifier7;
            this.InterchangeReceiverID8 = interchangeReceiverID8;
            this.InterchangeDate9 = interchangeDate9;
            this.InterchangeTime10 = interchangeTime10;
            this.InterchangeControlStandardsIdentifier11 = interchangeControlStandardsIdentifier11;
            this.InterchangeControlVersionNumber12 = interchangeControlVersionNumber12;
            this.InterchangeControlNumber13 = interchangeControlNumber13;
            this.AcknowledgementRequested14 = acknowledgementRequested14;
            this.UsageIndicator15 = usageIndicator15;
            this.ComponentElementSeparator16 = componentElementSeparator16;
        }
        
        /// <summary>
        /// Gets or Sets AuthorizationInformationQualifier1
        /// </summary>
        [DataMember(Name="authorizationInformationQualifier_1", EmitDefaultValue=false)]
        public string AuthorizationInformationQualifier1 { get; set; }

        /// <summary>
        /// Gets or Sets AuthorizationInformation2
        /// </summary>
        [DataMember(Name="authorizationInformation_2", EmitDefaultValue=false)]
        public string AuthorizationInformation2 { get; set; }

        /// <summary>
        /// Gets or Sets SecurityInformationQualifier3
        /// </summary>
        [DataMember(Name="securityInformationQualifier_3", EmitDefaultValue=false)]
        public string SecurityInformationQualifier3 { get; set; }

        /// <summary>
        /// Gets or Sets SecurityInformation4
        /// </summary>
        [DataMember(Name="securityInformation_4", EmitDefaultValue=false)]
        public string SecurityInformation4 { get; set; }

        /// <summary>
        /// Gets or Sets SenderIDQualifier5
        /// </summary>
        [DataMember(Name="senderIDQualifier_5", EmitDefaultValue=false)]
        public string SenderIDQualifier5 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeSenderID6
        /// </summary>
        [DataMember(Name="interchangeSenderID_6", EmitDefaultValue=false)]
        public string InterchangeSenderID6 { get; set; }

        /// <summary>
        /// Gets or Sets ReceiverIDQualifier7
        /// </summary>
        [DataMember(Name="receiverIDQualifier_7", EmitDefaultValue=false)]
        public string ReceiverIDQualifier7 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeReceiverID8
        /// </summary>
        [DataMember(Name="interchangeReceiverID_8", EmitDefaultValue=false)]
        public string InterchangeReceiverID8 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeDate9
        /// </summary>
        [DataMember(Name="interchangeDate_9", EmitDefaultValue=false)]
        public string InterchangeDate9 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeTime10
        /// </summary>
        [DataMember(Name="interchangeTime_10", EmitDefaultValue=false)]
        public string InterchangeTime10 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeControlStandardsIdentifier11
        /// </summary>
        [DataMember(Name="interchangeControlStandardsIdentifier_11", EmitDefaultValue=false)]
        public string InterchangeControlStandardsIdentifier11 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeControlVersionNumber12
        /// </summary>
        [DataMember(Name="interchangeControlVersionNumber_12", EmitDefaultValue=false)]
        public string InterchangeControlVersionNumber12 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeControlNumber13
        /// </summary>
        [DataMember(Name="interchangeControlNumber_13", EmitDefaultValue=false)]
        public string InterchangeControlNumber13 { get; set; }

        /// <summary>
        /// Gets or Sets AcknowledgementRequested14
        /// </summary>
        [DataMember(Name="acknowledgementRequested_14", EmitDefaultValue=false)]
        public string AcknowledgementRequested14 { get; set; }

        /// <summary>
        /// Gets or Sets UsageIndicator15
        /// </summary>
        [DataMember(Name="usageIndicator_15", EmitDefaultValue=false)]
        public string UsageIndicator15 { get; set; }

        /// <summary>
        /// Gets or Sets ComponentElementSeparator16
        /// </summary>
        [DataMember(Name="componentElementSeparator_16", EmitDefaultValue=false)]
        public string ComponentElementSeparator16 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricCoreModelEdiX12ISA {\n");
            sb.Append("  AuthorizationInformationQualifier1: ").Append(AuthorizationInformationQualifier1).Append("\n");
            sb.Append("  AuthorizationInformation2: ").Append(AuthorizationInformation2).Append("\n");
            sb.Append("  SecurityInformationQualifier3: ").Append(SecurityInformationQualifier3).Append("\n");
            sb.Append("  SecurityInformation4: ").Append(SecurityInformation4).Append("\n");
            sb.Append("  SenderIDQualifier5: ").Append(SenderIDQualifier5).Append("\n");
            sb.Append("  InterchangeSenderID6: ").Append(InterchangeSenderID6).Append("\n");
            sb.Append("  ReceiverIDQualifier7: ").Append(ReceiverIDQualifier7).Append("\n");
            sb.Append("  InterchangeReceiverID8: ").Append(InterchangeReceiverID8).Append("\n");
            sb.Append("  InterchangeDate9: ").Append(InterchangeDate9).Append("\n");
            sb.Append("  InterchangeTime10: ").Append(InterchangeTime10).Append("\n");
            sb.Append("  InterchangeControlStandardsIdentifier11: ").Append(InterchangeControlStandardsIdentifier11).Append("\n");
            sb.Append("  InterchangeControlVersionNumber12: ").Append(InterchangeControlVersionNumber12).Append("\n");
            sb.Append("  InterchangeControlNumber13: ").Append(InterchangeControlNumber13).Append("\n");
            sb.Append("  AcknowledgementRequested14: ").Append(AcknowledgementRequested14).Append("\n");
            sb.Append("  UsageIndicator15: ").Append(UsageIndicator15).Append("\n");
            sb.Append("  ComponentElementSeparator16: ").Append(ComponentElementSeparator16).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricCoreModelEdiX12ISA);
        }

        /// <summary>
        /// Returns true if EdiFabricCoreModelEdiX12ISA instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricCoreModelEdiX12ISA to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricCoreModelEdiX12ISA input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.AuthorizationInformationQualifier1 == input.AuthorizationInformationQualifier1 ||
                    (this.AuthorizationInformationQualifier1 != null &&
                    this.AuthorizationInformationQualifier1.Equals(input.AuthorizationInformationQualifier1))
                ) && 
                (
                    this.AuthorizationInformation2 == input.AuthorizationInformation2 ||
                    (this.AuthorizationInformation2 != null &&
                    this.AuthorizationInformation2.Equals(input.AuthorizationInformation2))
                ) && 
                (
                    this.SecurityInformationQualifier3 == input.SecurityInformationQualifier3 ||
                    (this.SecurityInformationQualifier3 != null &&
                    this.SecurityInformationQualifier3.Equals(input.SecurityInformationQualifier3))
                ) && 
                (
                    this.SecurityInformation4 == input.SecurityInformation4 ||
                    (this.SecurityInformation4 != null &&
                    this.SecurityInformation4.Equals(input.SecurityInformation4))
                ) && 
                (
                    this.SenderIDQualifier5 == input.SenderIDQualifier5 ||
                    (this.SenderIDQualifier5 != null &&
                    this.SenderIDQualifier5.Equals(input.SenderIDQualifier5))
                ) && 
                (
                    this.InterchangeSenderID6 == input.InterchangeSenderID6 ||
                    (this.InterchangeSenderID6 != null &&
                    this.InterchangeSenderID6.Equals(input.InterchangeSenderID6))
                ) && 
                (
                    this.ReceiverIDQualifier7 == input.ReceiverIDQualifier7 ||
                    (this.ReceiverIDQualifier7 != null &&
                    this.ReceiverIDQualifier7.Equals(input.ReceiverIDQualifier7))
                ) && 
                (
                    this.InterchangeReceiverID8 == input.InterchangeReceiverID8 ||
                    (this.InterchangeReceiverID8 != null &&
                    this.InterchangeReceiverID8.Equals(input.InterchangeReceiverID8))
                ) && 
                (
                    this.InterchangeDate9 == input.InterchangeDate9 ||
                    (this.InterchangeDate9 != null &&
                    this.InterchangeDate9.Equals(input.InterchangeDate9))
                ) && 
                (
                    this.InterchangeTime10 == input.InterchangeTime10 ||
                    (this.InterchangeTime10 != null &&
                    this.InterchangeTime10.Equals(input.InterchangeTime10))
                ) && 
                (
                    this.InterchangeControlStandardsIdentifier11 == input.InterchangeControlStandardsIdentifier11 ||
                    (this.InterchangeControlStandardsIdentifier11 != null &&
                    this.InterchangeControlStandardsIdentifier11.Equals(input.InterchangeControlStandardsIdentifier11))
                ) && 
                (
                    this.InterchangeControlVersionNumber12 == input.InterchangeControlVersionNumber12 ||
                    (this.InterchangeControlVersionNumber12 != null &&
                    this.InterchangeControlVersionNumber12.Equals(input.InterchangeControlVersionNumber12))
                ) && 
                (
                    this.InterchangeControlNumber13 == input.InterchangeControlNumber13 ||
                    (this.InterchangeControlNumber13 != null &&
                    this.InterchangeControlNumber13.Equals(input.InterchangeControlNumber13))
                ) && 
                (
                    this.AcknowledgementRequested14 == input.AcknowledgementRequested14 ||
                    (this.AcknowledgementRequested14 != null &&
                    this.AcknowledgementRequested14.Equals(input.AcknowledgementRequested14))
                ) && 
                (
                    this.UsageIndicator15 == input.UsageIndicator15 ||
                    (this.UsageIndicator15 != null &&
                    this.UsageIndicator15.Equals(input.UsageIndicator15))
                ) && 
                (
                    this.ComponentElementSeparator16 == input.ComponentElementSeparator16 ||
                    (this.ComponentElementSeparator16 != null &&
                    this.ComponentElementSeparator16.Equals(input.ComponentElementSeparator16))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.AuthorizationInformationQualifier1 != null)
                    hashCode = hashCode * 59 + this.AuthorizationInformationQualifier1.GetHashCode();
                if (this.AuthorizationInformation2 != null)
                    hashCode = hashCode * 59 + this.AuthorizationInformation2.GetHashCode();
                if (this.SecurityInformationQualifier3 != null)
                    hashCode = hashCode * 59 + this.SecurityInformationQualifier3.GetHashCode();
                if (this.SecurityInformation4 != null)
                    hashCode = hashCode * 59 + this.SecurityInformation4.GetHashCode();
                if (this.SenderIDQualifier5 != null)
                    hashCode = hashCode * 59 + this.SenderIDQualifier5.GetHashCode();
                if (this.InterchangeSenderID6 != null)
                    hashCode = hashCode * 59 + this.InterchangeSenderID6.GetHashCode();
                if (this.ReceiverIDQualifier7 != null)
                    hashCode = hashCode * 59 + this.ReceiverIDQualifier7.GetHashCode();
                if (this.InterchangeReceiverID8 != null)
                    hashCode = hashCode * 59 + this.InterchangeReceiverID8.GetHashCode();
                if (this.InterchangeDate9 != null)
                    hashCode = hashCode * 59 + this.InterchangeDate9.GetHashCode();
                if (this.InterchangeTime10 != null)
                    hashCode = hashCode * 59 + this.InterchangeTime10.GetHashCode();
                if (this.InterchangeControlStandardsIdentifier11 != null)
                    hashCode = hashCode * 59 + this.InterchangeControlStandardsIdentifier11.GetHashCode();
                if (this.InterchangeControlVersionNumber12 != null)
                    hashCode = hashCode * 59 + this.InterchangeControlVersionNumber12.GetHashCode();
                if (this.InterchangeControlNumber13 != null)
                    hashCode = hashCode * 59 + this.InterchangeControlNumber13.GetHashCode();
                if (this.AcknowledgementRequested14 != null)
                    hashCode = hashCode * 59 + this.AcknowledgementRequested14.GetHashCode();
                if (this.UsageIndicator15 != null)
                    hashCode = hashCode * 59 + this.UsageIndicator15.GetHashCode();
                if (this.ComponentElementSeparator16 != null)
                    hashCode = hashCode * 59 + this.ComponentElementSeparator16.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
