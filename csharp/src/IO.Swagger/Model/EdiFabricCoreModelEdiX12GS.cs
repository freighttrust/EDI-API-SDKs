/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricCoreModelEdiX12GS
    /// </summary>
    [DataContract]
    public partial class EdiFabricCoreModelEdiX12GS :  IEquatable<EdiFabricCoreModelEdiX12GS>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricCoreModelEdiX12GS" /> class.
        /// </summary>
        /// <param name="codeIdentifyingInformationType1">codeIdentifyingInformationType1.</param>
        /// <param name="senderIDCode2">senderIDCode2.</param>
        /// <param name="receiverIDCode3">receiverIDCode3.</param>
        /// <param name="date4">date4.</param>
        /// <param name="time5">time5.</param>
        /// <param name="groupControlNumber6">groupControlNumber6.</param>
        /// <param name="transactionTypeCode7">transactionTypeCode7.</param>
        /// <param name="versionAndRelease8">versionAndRelease8.</param>
        public EdiFabricCoreModelEdiX12GS(string codeIdentifyingInformationType1 = default(string), string senderIDCode2 = default(string), string receiverIDCode3 = default(string), string date4 = default(string), string time5 = default(string), string groupControlNumber6 = default(string), string transactionTypeCode7 = default(string), string versionAndRelease8 = default(string))
        {
            this.CodeIdentifyingInformationType1 = codeIdentifyingInformationType1;
            this.SenderIDCode2 = senderIDCode2;
            this.ReceiverIDCode3 = receiverIDCode3;
            this.Date4 = date4;
            this.Time5 = time5;
            this.GroupControlNumber6 = groupControlNumber6;
            this.TransactionTypeCode7 = transactionTypeCode7;
            this.VersionAndRelease8 = versionAndRelease8;
        }
        
        /// <summary>
        /// Gets or Sets CodeIdentifyingInformationType1
        /// </summary>
        [DataMember(Name="codeIdentifyingInformationType_1", EmitDefaultValue=false)]
        public string CodeIdentifyingInformationType1 { get; set; }

        /// <summary>
        /// Gets or Sets SenderIDCode2
        /// </summary>
        [DataMember(Name="senderIDCode_2", EmitDefaultValue=false)]
        public string SenderIDCode2 { get; set; }

        /// <summary>
        /// Gets or Sets ReceiverIDCode3
        /// </summary>
        [DataMember(Name="receiverIDCode_3", EmitDefaultValue=false)]
        public string ReceiverIDCode3 { get; set; }

        /// <summary>
        /// Gets or Sets Date4
        /// </summary>
        [DataMember(Name="date_4", EmitDefaultValue=false)]
        public string Date4 { get; set; }

        /// <summary>
        /// Gets or Sets Time5
        /// </summary>
        [DataMember(Name="time_5", EmitDefaultValue=false)]
        public string Time5 { get; set; }

        /// <summary>
        /// Gets or Sets GroupControlNumber6
        /// </summary>
        [DataMember(Name="groupControlNumber_6", EmitDefaultValue=false)]
        public string GroupControlNumber6 { get; set; }

        /// <summary>
        /// Gets or Sets TransactionTypeCode7
        /// </summary>
        [DataMember(Name="transactionTypeCode_7", EmitDefaultValue=false)]
        public string TransactionTypeCode7 { get; set; }

        /// <summary>
        /// Gets or Sets VersionAndRelease8
        /// </summary>
        [DataMember(Name="versionAndRelease_8", EmitDefaultValue=false)]
        public string VersionAndRelease8 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricCoreModelEdiX12GS {\n");
            sb.Append("  CodeIdentifyingInformationType1: ").Append(CodeIdentifyingInformationType1).Append("\n");
            sb.Append("  SenderIDCode2: ").Append(SenderIDCode2).Append("\n");
            sb.Append("  ReceiverIDCode3: ").Append(ReceiverIDCode3).Append("\n");
            sb.Append("  Date4: ").Append(Date4).Append("\n");
            sb.Append("  Time5: ").Append(Time5).Append("\n");
            sb.Append("  GroupControlNumber6: ").Append(GroupControlNumber6).Append("\n");
            sb.Append("  TransactionTypeCode7: ").Append(TransactionTypeCode7).Append("\n");
            sb.Append("  VersionAndRelease8: ").Append(VersionAndRelease8).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricCoreModelEdiX12GS);
        }

        /// <summary>
        /// Returns true if EdiFabricCoreModelEdiX12GS instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricCoreModelEdiX12GS to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricCoreModelEdiX12GS input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.CodeIdentifyingInformationType1 == input.CodeIdentifyingInformationType1 ||
                    (this.CodeIdentifyingInformationType1 != null &&
                    this.CodeIdentifyingInformationType1.Equals(input.CodeIdentifyingInformationType1))
                ) && 
                (
                    this.SenderIDCode2 == input.SenderIDCode2 ||
                    (this.SenderIDCode2 != null &&
                    this.SenderIDCode2.Equals(input.SenderIDCode2))
                ) && 
                (
                    this.ReceiverIDCode3 == input.ReceiverIDCode3 ||
                    (this.ReceiverIDCode3 != null &&
                    this.ReceiverIDCode3.Equals(input.ReceiverIDCode3))
                ) && 
                (
                    this.Date4 == input.Date4 ||
                    (this.Date4 != null &&
                    this.Date4.Equals(input.Date4))
                ) && 
                (
                    this.Time5 == input.Time5 ||
                    (this.Time5 != null &&
                    this.Time5.Equals(input.Time5))
                ) && 
                (
                    this.GroupControlNumber6 == input.GroupControlNumber6 ||
                    (this.GroupControlNumber6 != null &&
                    this.GroupControlNumber6.Equals(input.GroupControlNumber6))
                ) && 
                (
                    this.TransactionTypeCode7 == input.TransactionTypeCode7 ||
                    (this.TransactionTypeCode7 != null &&
                    this.TransactionTypeCode7.Equals(input.TransactionTypeCode7))
                ) && 
                (
                    this.VersionAndRelease8 == input.VersionAndRelease8 ||
                    (this.VersionAndRelease8 != null &&
                    this.VersionAndRelease8.Equals(input.VersionAndRelease8))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.CodeIdentifyingInformationType1 != null)
                    hashCode = hashCode * 59 + this.CodeIdentifyingInformationType1.GetHashCode();
                if (this.SenderIDCode2 != null)
                    hashCode = hashCode * 59 + this.SenderIDCode2.GetHashCode();
                if (this.ReceiverIDCode3 != null)
                    hashCode = hashCode * 59 + this.ReceiverIDCode3.GetHashCode();
                if (this.Date4 != null)
                    hashCode = hashCode * 59 + this.Date4.GetHashCode();
                if (this.Time5 != null)
                    hashCode = hashCode * 59 + this.Time5.GetHashCode();
                if (this.GroupControlNumber6 != null)
                    hashCode = hashCode * 59 + this.GroupControlNumber6.GetHashCode();
                if (this.TransactionTypeCode7 != null)
                    hashCode = hashCode * 59 + this.TransactionTypeCode7.GetHashCode();
                if (this.VersionAndRelease8 != null)
                    hashCode = hashCode * 59 + this.VersionAndRelease8.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
