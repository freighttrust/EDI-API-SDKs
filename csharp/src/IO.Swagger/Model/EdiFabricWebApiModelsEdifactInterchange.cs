/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricWebApiModelsEdifactInterchange
    /// </summary>
    [DataContract]
    public partial class EdiFabricWebApiModelsEdifactInterchange :  IEquatable<EdiFabricWebApiModelsEdifactInterchange>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricWebApiModelsEdifactInterchange" /> class.
        /// </summary>
        /// <param name="unb">unb.</param>
        /// <param name="groups">groups.</param>
        /// <param name="unzTrailers">unzTrailers.</param>
        /// <param name="errors">errors.</param>
        public EdiFabricWebApiModelsEdifactInterchange(EdiFabricCoreModelEdiEdifactUNB unb = default(EdiFabricCoreModelEdiEdifactUNB), List<EdiFabricWebApiModelsEdifactGroup> groups = default(List<EdiFabricWebApiModelsEdifactGroup>), List<EdiFabricCoreModelEdiEdifactUNZ> unzTrailers = default(List<EdiFabricCoreModelEdiEdifactUNZ>), List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext> errors = default(List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext>))
        {
            this.Unb = unb;
            this.Groups = groups;
            this.UnzTrailers = unzTrailers;
            this.Errors = errors;
        }
        
        /// <summary>
        /// Gets or Sets Unb
        /// </summary>
        [DataMember(Name="unb", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactUNB Unb { get; set; }

        /// <summary>
        /// Gets or Sets Groups
        /// </summary>
        [DataMember(Name="groups", EmitDefaultValue=false)]
        public List<EdiFabricWebApiModelsEdifactGroup> Groups { get; set; }

        /// <summary>
        /// Gets or Sets UnzTrailers
        /// </summary>
        [DataMember(Name="unzTrailers", EmitDefaultValue=false)]
        public List<EdiFabricCoreModelEdiEdifactUNZ> UnzTrailers { get; set; }

        /// <summary>
        /// Gets or Sets Errors
        /// </summary>
        [DataMember(Name="errors", EmitDefaultValue=false)]
        public List<EdiFabricCoreModelEdiErrorContextsReaderErrorContext> Errors { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricWebApiModelsEdifactInterchange {\n");
            sb.Append("  Unb: ").Append(Unb).Append("\n");
            sb.Append("  Groups: ").Append(Groups).Append("\n");
            sb.Append("  UnzTrailers: ").Append(UnzTrailers).Append("\n");
            sb.Append("  Errors: ").Append(Errors).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricWebApiModelsEdifactInterchange);
        }

        /// <summary>
        /// Returns true if EdiFabricWebApiModelsEdifactInterchange instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricWebApiModelsEdifactInterchange to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricWebApiModelsEdifactInterchange input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.Unb == input.Unb ||
                    (this.Unb != null &&
                    this.Unb.Equals(input.Unb))
                ) && 
                (
                    this.Groups == input.Groups ||
                    this.Groups != null &&
                    this.Groups.SequenceEqual(input.Groups)
                ) && 
                (
                    this.UnzTrailers == input.UnzTrailers ||
                    this.UnzTrailers != null &&
                    this.UnzTrailers.SequenceEqual(input.UnzTrailers)
                ) && 
                (
                    this.Errors == input.Errors ||
                    this.Errors != null &&
                    this.Errors.SequenceEqual(input.Errors)
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.Unb != null)
                    hashCode = hashCode * 59 + this.Unb.GetHashCode();
                if (this.Groups != null)
                    hashCode = hashCode * 59 + this.Groups.GetHashCode();
                if (this.UnzTrailers != null)
                    hashCode = hashCode * 59 + this.UnzTrailers.GetHashCode();
                if (this.Errors != null)
                    hashCode = hashCode * 59 + this.Errors.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
