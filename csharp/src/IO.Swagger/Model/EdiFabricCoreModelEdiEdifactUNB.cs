/* 
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 */

using System;
using System.Linq;
using System.IO;
using System.Text;
using System.Text.RegularExpressions;
using System.Collections;
using System.Collections.Generic;
using System.Collections.ObjectModel;
using System.Runtime.Serialization;
using Newtonsoft.Json;
using Newtonsoft.Json.Converters;
using System.ComponentModel.DataAnnotations;
using SwaggerDateConverter = IO.Swagger.Client.SwaggerDateConverter;

namespace IO.Swagger.Model
{
    /// <summary>
    /// EdiFabricCoreModelEdiEdifactUNB
    /// </summary>
    [DataContract]
    public partial class EdiFabricCoreModelEdiEdifactUNB :  IEquatable<EdiFabricCoreModelEdiEdifactUNB>, IValidatableObject
    {
        /// <summary>
        /// Initializes a new instance of the <see cref="EdiFabricCoreModelEdiEdifactUNB" /> class.
        /// </summary>
        /// <param name="syntaxidentifieR1">syntaxidentifieR1.</param>
        /// <param name="interchangesendeR2">interchangesendeR2.</param>
        /// <param name="interchangerecipienT3">interchangerecipienT3.</param>
        /// <param name="dateandtimeofpreparatioN4">dateandtimeofpreparatioN4.</param>
        /// <param name="interchangeControlReference5">interchangeControlReference5.</param>
        /// <param name="recipientsreferencepassworddetailS6">recipientsreferencepassworddetailS6.</param>
        /// <param name="applicationReference7">applicationReference7.</param>
        /// <param name="processingPriorityCode8">processingPriorityCode8.</param>
        /// <param name="acknowledgementRequest9">acknowledgementRequest9.</param>
        /// <param name="interchangeAgreementIdentifier10">interchangeAgreementIdentifier10.</param>
        /// <param name="testIndicator11">testIndicator11.</param>
        public EdiFabricCoreModelEdiEdifactUNB(EdiFabricCoreModelEdiEdifactS001 syntaxidentifieR1 = default(EdiFabricCoreModelEdiEdifactS001), EdiFabricCoreModelEdiEdifactS002 interchangesendeR2 = default(EdiFabricCoreModelEdiEdifactS002), EdiFabricCoreModelEdiEdifactS003 interchangerecipienT3 = default(EdiFabricCoreModelEdiEdifactS003), EdiFabricCoreModelEdiEdifactS004 dateandtimeofpreparatioN4 = default(EdiFabricCoreModelEdiEdifactS004), string interchangeControlReference5 = default(string), EdiFabricCoreModelEdiEdifactS005 recipientsreferencepassworddetailS6 = default(EdiFabricCoreModelEdiEdifactS005), string applicationReference7 = default(string), string processingPriorityCode8 = default(string), string acknowledgementRequest9 = default(string), string interchangeAgreementIdentifier10 = default(string), string testIndicator11 = default(string))
        {
            this.SyntaxidentifieR1 = syntaxidentifieR1;
            this.InterchangesendeR2 = interchangesendeR2;
            this.InterchangerecipienT3 = interchangerecipienT3;
            this.DateandtimeofpreparatioN4 = dateandtimeofpreparatioN4;
            this.InterchangeControlReference5 = interchangeControlReference5;
            this.RecipientsreferencepassworddetailS6 = recipientsreferencepassworddetailS6;
            this.ApplicationReference7 = applicationReference7;
            this.ProcessingPriorityCode8 = processingPriorityCode8;
            this.AcknowledgementRequest9 = acknowledgementRequest9;
            this.InterchangeAgreementIdentifier10 = interchangeAgreementIdentifier10;
            this.TestIndicator11 = testIndicator11;
        }
        
        /// <summary>
        /// Gets or Sets SyntaxidentifieR1
        /// </summary>
        [DataMember(Name="syntaxidentifieR_1", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactS001 SyntaxidentifieR1 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangesendeR2
        /// </summary>
        [DataMember(Name="interchangesendeR_2", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactS002 InterchangesendeR2 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangerecipienT3
        /// </summary>
        [DataMember(Name="interchangerecipienT_3", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactS003 InterchangerecipienT3 { get; set; }

        /// <summary>
        /// Gets or Sets DateandtimeofpreparatioN4
        /// </summary>
        [DataMember(Name="dateandtimeofpreparatioN_4", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactS004 DateandtimeofpreparatioN4 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeControlReference5
        /// </summary>
        [DataMember(Name="interchangeControlReference_5", EmitDefaultValue=false)]
        public string InterchangeControlReference5 { get; set; }

        /// <summary>
        /// Gets or Sets RecipientsreferencepassworddetailS6
        /// </summary>
        [DataMember(Name="recipientsreferencepassworddetailS_6", EmitDefaultValue=false)]
        public EdiFabricCoreModelEdiEdifactS005 RecipientsreferencepassworddetailS6 { get; set; }

        /// <summary>
        /// Gets or Sets ApplicationReference7
        /// </summary>
        [DataMember(Name="applicationReference_7", EmitDefaultValue=false)]
        public string ApplicationReference7 { get; set; }

        /// <summary>
        /// Gets or Sets ProcessingPriorityCode8
        /// </summary>
        [DataMember(Name="processingPriorityCode_8", EmitDefaultValue=false)]
        public string ProcessingPriorityCode8 { get; set; }

        /// <summary>
        /// Gets or Sets AcknowledgementRequest9
        /// </summary>
        [DataMember(Name="acknowledgementRequest_9", EmitDefaultValue=false)]
        public string AcknowledgementRequest9 { get; set; }

        /// <summary>
        /// Gets or Sets InterchangeAgreementIdentifier10
        /// </summary>
        [DataMember(Name="interchangeAgreementIdentifier_10", EmitDefaultValue=false)]
        public string InterchangeAgreementIdentifier10 { get; set; }

        /// <summary>
        /// Gets or Sets TestIndicator11
        /// </summary>
        [DataMember(Name="testIndicator_11", EmitDefaultValue=false)]
        public string TestIndicator11 { get; set; }

        /// <summary>
        /// Returns the string presentation of the object
        /// </summary>
        /// <returns>String presentation of the object</returns>
        public override string ToString()
        {
            var sb = new StringBuilder();
            sb.Append("class EdiFabricCoreModelEdiEdifactUNB {\n");
            sb.Append("  SyntaxidentifieR1: ").Append(SyntaxidentifieR1).Append("\n");
            sb.Append("  InterchangesendeR2: ").Append(InterchangesendeR2).Append("\n");
            sb.Append("  InterchangerecipienT3: ").Append(InterchangerecipienT3).Append("\n");
            sb.Append("  DateandtimeofpreparatioN4: ").Append(DateandtimeofpreparatioN4).Append("\n");
            sb.Append("  InterchangeControlReference5: ").Append(InterchangeControlReference5).Append("\n");
            sb.Append("  RecipientsreferencepassworddetailS6: ").Append(RecipientsreferencepassworddetailS6).Append("\n");
            sb.Append("  ApplicationReference7: ").Append(ApplicationReference7).Append("\n");
            sb.Append("  ProcessingPriorityCode8: ").Append(ProcessingPriorityCode8).Append("\n");
            sb.Append("  AcknowledgementRequest9: ").Append(AcknowledgementRequest9).Append("\n");
            sb.Append("  InterchangeAgreementIdentifier10: ").Append(InterchangeAgreementIdentifier10).Append("\n");
            sb.Append("  TestIndicator11: ").Append(TestIndicator11).Append("\n");
            sb.Append("}\n");
            return sb.ToString();
        }
  
        /// <summary>
        /// Returns the JSON string presentation of the object
        /// </summary>
        /// <returns>JSON string presentation of the object</returns>
        public virtual string ToJson()
        {
            return JsonConvert.SerializeObject(this, Formatting.Indented);
        }

        /// <summary>
        /// Returns true if objects are equal
        /// </summary>
        /// <param name="input">Object to be compared</param>
        /// <returns>Boolean</returns>
        public override bool Equals(object input)
        {
            return this.Equals(input as EdiFabricCoreModelEdiEdifactUNB);
        }

        /// <summary>
        /// Returns true if EdiFabricCoreModelEdiEdifactUNB instances are equal
        /// </summary>
        /// <param name="input">Instance of EdiFabricCoreModelEdiEdifactUNB to be compared</param>
        /// <returns>Boolean</returns>
        public bool Equals(EdiFabricCoreModelEdiEdifactUNB input)
        {
            if (input == null)
                return false;

            return 
                (
                    this.SyntaxidentifieR1 == input.SyntaxidentifieR1 ||
                    (this.SyntaxidentifieR1 != null &&
                    this.SyntaxidentifieR1.Equals(input.SyntaxidentifieR1))
                ) && 
                (
                    this.InterchangesendeR2 == input.InterchangesendeR2 ||
                    (this.InterchangesendeR2 != null &&
                    this.InterchangesendeR2.Equals(input.InterchangesendeR2))
                ) && 
                (
                    this.InterchangerecipienT3 == input.InterchangerecipienT3 ||
                    (this.InterchangerecipienT3 != null &&
                    this.InterchangerecipienT3.Equals(input.InterchangerecipienT3))
                ) && 
                (
                    this.DateandtimeofpreparatioN4 == input.DateandtimeofpreparatioN4 ||
                    (this.DateandtimeofpreparatioN4 != null &&
                    this.DateandtimeofpreparatioN4.Equals(input.DateandtimeofpreparatioN4))
                ) && 
                (
                    this.InterchangeControlReference5 == input.InterchangeControlReference5 ||
                    (this.InterchangeControlReference5 != null &&
                    this.InterchangeControlReference5.Equals(input.InterchangeControlReference5))
                ) && 
                (
                    this.RecipientsreferencepassworddetailS6 == input.RecipientsreferencepassworddetailS6 ||
                    (this.RecipientsreferencepassworddetailS6 != null &&
                    this.RecipientsreferencepassworddetailS6.Equals(input.RecipientsreferencepassworddetailS6))
                ) && 
                (
                    this.ApplicationReference7 == input.ApplicationReference7 ||
                    (this.ApplicationReference7 != null &&
                    this.ApplicationReference7.Equals(input.ApplicationReference7))
                ) && 
                (
                    this.ProcessingPriorityCode8 == input.ProcessingPriorityCode8 ||
                    (this.ProcessingPriorityCode8 != null &&
                    this.ProcessingPriorityCode8.Equals(input.ProcessingPriorityCode8))
                ) && 
                (
                    this.AcknowledgementRequest9 == input.AcknowledgementRequest9 ||
                    (this.AcknowledgementRequest9 != null &&
                    this.AcknowledgementRequest9.Equals(input.AcknowledgementRequest9))
                ) && 
                (
                    this.InterchangeAgreementIdentifier10 == input.InterchangeAgreementIdentifier10 ||
                    (this.InterchangeAgreementIdentifier10 != null &&
                    this.InterchangeAgreementIdentifier10.Equals(input.InterchangeAgreementIdentifier10))
                ) && 
                (
                    this.TestIndicator11 == input.TestIndicator11 ||
                    (this.TestIndicator11 != null &&
                    this.TestIndicator11.Equals(input.TestIndicator11))
                );
        }

        /// <summary>
        /// Gets the hash code
        /// </summary>
        /// <returns>Hash code</returns>
        public override int GetHashCode()
        {
            unchecked // Overflow is fine, just wrap
            {
                int hashCode = 41;
                if (this.SyntaxidentifieR1 != null)
                    hashCode = hashCode * 59 + this.SyntaxidentifieR1.GetHashCode();
                if (this.InterchangesendeR2 != null)
                    hashCode = hashCode * 59 + this.InterchangesendeR2.GetHashCode();
                if (this.InterchangerecipienT3 != null)
                    hashCode = hashCode * 59 + this.InterchangerecipienT3.GetHashCode();
                if (this.DateandtimeofpreparatioN4 != null)
                    hashCode = hashCode * 59 + this.DateandtimeofpreparatioN4.GetHashCode();
                if (this.InterchangeControlReference5 != null)
                    hashCode = hashCode * 59 + this.InterchangeControlReference5.GetHashCode();
                if (this.RecipientsreferencepassworddetailS6 != null)
                    hashCode = hashCode * 59 + this.RecipientsreferencepassworddetailS6.GetHashCode();
                if (this.ApplicationReference7 != null)
                    hashCode = hashCode * 59 + this.ApplicationReference7.GetHashCode();
                if (this.ProcessingPriorityCode8 != null)
                    hashCode = hashCode * 59 + this.ProcessingPriorityCode8.GetHashCode();
                if (this.AcknowledgementRequest9 != null)
                    hashCode = hashCode * 59 + this.AcknowledgementRequest9.GetHashCode();
                if (this.InterchangeAgreementIdentifier10 != null)
                    hashCode = hashCode * 59 + this.InterchangeAgreementIdentifier10.GetHashCode();
                if (this.TestIndicator11 != null)
                    hashCode = hashCode * 59 + this.TestIndicator11.GetHashCode();
                return hashCode;
            }
        }

        /// <summary>
        /// To validate all properties of the instance
        /// </summary>
        /// <param name="validationContext">Validation context</param>
        /// <returns>Validation Result</returns>
        IEnumerable<System.ComponentModel.DataAnnotations.ValidationResult> IValidatableObject.Validate(ValidationContext validationContext)
        {
            yield break;
        }
    }

}
