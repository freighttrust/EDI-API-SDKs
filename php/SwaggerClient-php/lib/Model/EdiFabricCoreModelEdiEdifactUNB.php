<?php
/**
 * EdiFabricCoreModelEdiEdifactUNB
 *
 * PHP version 5
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */

/**
 * EdiFabric API
 *
 * No description provided (generated by Swagger Codegen https://github.com/swagger-api/swagger-codegen)
 *
 * OpenAPI spec version: v1
 * 
 * Generated by: https://github.com/swagger-api/swagger-codegen.git
 * Swagger Codegen version: 2.4.4
 */

/**
 * NOTE: This class is auto generated by the swagger code generator program.
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */

namespace Swagger\Client\Model;

use \ArrayAccess;
use \Swagger\Client\ObjectSerializer;

/**
 * EdiFabricCoreModelEdiEdifactUNB Class Doc Comment
 *
 * @category Class
 * @package  Swagger\Client
 * @author   Swagger Codegen team
 * @link     https://github.com/swagger-api/swagger-codegen
 */
class EdiFabricCoreModelEdiEdifactUNB implements ModelInterface, ArrayAccess
{
    const DISCRIMINATOR = null;

    /**
      * The original name of the model.
      *
      * @var string
      */
    protected static $swaggerModelName = 'EdiFabric.Core.Model.Edi.Edifact.UNB';

    /**
      * Array of property to type mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerTypes = [
        'syntaxidentifie_r_1' => '\Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS001',
        'interchangesende_r_2' => '\Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS002',
        'interchangerecipien_t_3' => '\Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS003',
        'dateandtimeofpreparatio_n_4' => '\Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS004',
        'interchange_control_reference_5' => 'string',
        'recipientsreferencepassworddetail_s_6' => '\Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS005',
        'application_reference_7' => 'string',
        'processing_priority_code_8' => 'string',
        'acknowledgement_request_9' => 'string',
        'interchange_agreement_identifier_10' => 'string',
        'test_indicator_11' => 'string'
    ];

    /**
      * Array of property to format mappings. Used for (de)serialization
      *
      * @var string[]
      */
    protected static $swaggerFormats = [
        'syntaxidentifie_r_1' => null,
        'interchangesende_r_2' => null,
        'interchangerecipien_t_3' => null,
        'dateandtimeofpreparatio_n_4' => null,
        'interchange_control_reference_5' => null,
        'recipientsreferencepassworddetail_s_6' => null,
        'application_reference_7' => null,
        'processing_priority_code_8' => null,
        'acknowledgement_request_9' => null,
        'interchange_agreement_identifier_10' => null,
        'test_indicator_11' => null
    ];

    /**
     * Array of property to type mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerTypes()
    {
        return self::$swaggerTypes;
    }

    /**
     * Array of property to format mappings. Used for (de)serialization
     *
     * @return array
     */
    public static function swaggerFormats()
    {
        return self::$swaggerFormats;
    }

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @var string[]
     */
    protected static $attributeMap = [
        'syntaxidentifie_r_1' => 'syntaxidentifieR_1',
        'interchangesende_r_2' => 'interchangesendeR_2',
        'interchangerecipien_t_3' => 'interchangerecipienT_3',
        'dateandtimeofpreparatio_n_4' => 'dateandtimeofpreparatioN_4',
        'interchange_control_reference_5' => 'interchangeControlReference_5',
        'recipientsreferencepassworddetail_s_6' => 'recipientsreferencepassworddetailS_6',
        'application_reference_7' => 'applicationReference_7',
        'processing_priority_code_8' => 'processingPriorityCode_8',
        'acknowledgement_request_9' => 'acknowledgementRequest_9',
        'interchange_agreement_identifier_10' => 'interchangeAgreementIdentifier_10',
        'test_indicator_11' => 'testIndicator_11'
    ];

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @var string[]
     */
    protected static $setters = [
        'syntaxidentifie_r_1' => 'setSyntaxidentifieR1',
        'interchangesende_r_2' => 'setInterchangesendeR2',
        'interchangerecipien_t_3' => 'setInterchangerecipienT3',
        'dateandtimeofpreparatio_n_4' => 'setDateandtimeofpreparatioN4',
        'interchange_control_reference_5' => 'setInterchangeControlReference5',
        'recipientsreferencepassworddetail_s_6' => 'setRecipientsreferencepassworddetailS6',
        'application_reference_7' => 'setApplicationReference7',
        'processing_priority_code_8' => 'setProcessingPriorityCode8',
        'acknowledgement_request_9' => 'setAcknowledgementRequest9',
        'interchange_agreement_identifier_10' => 'setInterchangeAgreementIdentifier10',
        'test_indicator_11' => 'setTestIndicator11'
    ];

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @var string[]
     */
    protected static $getters = [
        'syntaxidentifie_r_1' => 'getSyntaxidentifieR1',
        'interchangesende_r_2' => 'getInterchangesendeR2',
        'interchangerecipien_t_3' => 'getInterchangerecipienT3',
        'dateandtimeofpreparatio_n_4' => 'getDateandtimeofpreparatioN4',
        'interchange_control_reference_5' => 'getInterchangeControlReference5',
        'recipientsreferencepassworddetail_s_6' => 'getRecipientsreferencepassworddetailS6',
        'application_reference_7' => 'getApplicationReference7',
        'processing_priority_code_8' => 'getProcessingPriorityCode8',
        'acknowledgement_request_9' => 'getAcknowledgementRequest9',
        'interchange_agreement_identifier_10' => 'getInterchangeAgreementIdentifier10',
        'test_indicator_11' => 'getTestIndicator11'
    ];

    /**
     * Array of attributes where the key is the local name,
     * and the value is the original name
     *
     * @return array
     */
    public static function attributeMap()
    {
        return self::$attributeMap;
    }

    /**
     * Array of attributes to setter functions (for deserialization of responses)
     *
     * @return array
     */
    public static function setters()
    {
        return self::$setters;
    }

    /**
     * Array of attributes to getter functions (for serialization of requests)
     *
     * @return array
     */
    public static function getters()
    {
        return self::$getters;
    }

    /**
     * The original name of the model.
     *
     * @return string
     */
    public function getModelName()
    {
        return self::$swaggerModelName;
    }

    

    

    /**
     * Associative array for storing property values
     *
     * @var mixed[]
     */
    protected $container = [];

    /**
     * Constructor
     *
     * @param mixed[] $data Associated array of property values
     *                      initializing the model
     */
    public function __construct(array $data = null)
    {
        $this->container['syntaxidentifie_r_1'] = isset($data['syntaxidentifie_r_1']) ? $data['syntaxidentifie_r_1'] : null;
        $this->container['interchangesende_r_2'] = isset($data['interchangesende_r_2']) ? $data['interchangesende_r_2'] : null;
        $this->container['interchangerecipien_t_3'] = isset($data['interchangerecipien_t_3']) ? $data['interchangerecipien_t_3'] : null;
        $this->container['dateandtimeofpreparatio_n_4'] = isset($data['dateandtimeofpreparatio_n_4']) ? $data['dateandtimeofpreparatio_n_4'] : null;
        $this->container['interchange_control_reference_5'] = isset($data['interchange_control_reference_5']) ? $data['interchange_control_reference_5'] : null;
        $this->container['recipientsreferencepassworddetail_s_6'] = isset($data['recipientsreferencepassworddetail_s_6']) ? $data['recipientsreferencepassworddetail_s_6'] : null;
        $this->container['application_reference_7'] = isset($data['application_reference_7']) ? $data['application_reference_7'] : null;
        $this->container['processing_priority_code_8'] = isset($data['processing_priority_code_8']) ? $data['processing_priority_code_8'] : null;
        $this->container['acknowledgement_request_9'] = isset($data['acknowledgement_request_9']) ? $data['acknowledgement_request_9'] : null;
        $this->container['interchange_agreement_identifier_10'] = isset($data['interchange_agreement_identifier_10']) ? $data['interchange_agreement_identifier_10'] : null;
        $this->container['test_indicator_11'] = isset($data['test_indicator_11']) ? $data['test_indicator_11'] : null;
    }

    /**
     * Show all the invalid properties with reasons.
     *
     * @return array invalid properties with reasons
     */
    public function listInvalidProperties()
    {
        $invalidProperties = [];

        return $invalidProperties;
    }

    /**
     * Validate all the properties in the model
     * return true if all passed
     *
     * @return bool True if all properties are valid
     */
    public function valid()
    {
        return count($this->listInvalidProperties()) === 0;
    }


    /**
     * Gets syntaxidentifie_r_1
     *
     * @return \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS001
     */
    public function getSyntaxidentifieR1()
    {
        return $this->container['syntaxidentifie_r_1'];
    }

    /**
     * Sets syntaxidentifie_r_1
     *
     * @param \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS001 $syntaxidentifie_r_1 syntaxidentifie_r_1
     *
     * @return $this
     */
    public function setSyntaxidentifieR1($syntaxidentifie_r_1)
    {
        $this->container['syntaxidentifie_r_1'] = $syntaxidentifie_r_1;

        return $this;
    }

    /**
     * Gets interchangesende_r_2
     *
     * @return \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS002
     */
    public function getInterchangesendeR2()
    {
        return $this->container['interchangesende_r_2'];
    }

    /**
     * Sets interchangesende_r_2
     *
     * @param \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS002 $interchangesende_r_2 interchangesende_r_2
     *
     * @return $this
     */
    public function setInterchangesendeR2($interchangesende_r_2)
    {
        $this->container['interchangesende_r_2'] = $interchangesende_r_2;

        return $this;
    }

    /**
     * Gets interchangerecipien_t_3
     *
     * @return \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS003
     */
    public function getInterchangerecipienT3()
    {
        return $this->container['interchangerecipien_t_3'];
    }

    /**
     * Sets interchangerecipien_t_3
     *
     * @param \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS003 $interchangerecipien_t_3 interchangerecipien_t_3
     *
     * @return $this
     */
    public function setInterchangerecipienT3($interchangerecipien_t_3)
    {
        $this->container['interchangerecipien_t_3'] = $interchangerecipien_t_3;

        return $this;
    }

    /**
     * Gets dateandtimeofpreparatio_n_4
     *
     * @return \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS004
     */
    public function getDateandtimeofpreparatioN4()
    {
        return $this->container['dateandtimeofpreparatio_n_4'];
    }

    /**
     * Sets dateandtimeofpreparatio_n_4
     *
     * @param \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS004 $dateandtimeofpreparatio_n_4 dateandtimeofpreparatio_n_4
     *
     * @return $this
     */
    public function setDateandtimeofpreparatioN4($dateandtimeofpreparatio_n_4)
    {
        $this->container['dateandtimeofpreparatio_n_4'] = $dateandtimeofpreparatio_n_4;

        return $this;
    }

    /**
     * Gets interchange_control_reference_5
     *
     * @return string
     */
    public function getInterchangeControlReference5()
    {
        return $this->container['interchange_control_reference_5'];
    }

    /**
     * Sets interchange_control_reference_5
     *
     * @param string $interchange_control_reference_5 interchange_control_reference_5
     *
     * @return $this
     */
    public function setInterchangeControlReference5($interchange_control_reference_5)
    {
        $this->container['interchange_control_reference_5'] = $interchange_control_reference_5;

        return $this;
    }

    /**
     * Gets recipientsreferencepassworddetail_s_6
     *
     * @return \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS005
     */
    public function getRecipientsreferencepassworddetailS6()
    {
        return $this->container['recipientsreferencepassworddetail_s_6'];
    }

    /**
     * Sets recipientsreferencepassworddetail_s_6
     *
     * @param \Swagger\Client\Model\EdiFabricCoreModelEdiEdifactS005 $recipientsreferencepassworddetail_s_6 recipientsreferencepassworddetail_s_6
     *
     * @return $this
     */
    public function setRecipientsreferencepassworddetailS6($recipientsreferencepassworddetail_s_6)
    {
        $this->container['recipientsreferencepassworddetail_s_6'] = $recipientsreferencepassworddetail_s_6;

        return $this;
    }

    /**
     * Gets application_reference_7
     *
     * @return string
     */
    public function getApplicationReference7()
    {
        return $this->container['application_reference_7'];
    }

    /**
     * Sets application_reference_7
     *
     * @param string $application_reference_7 application_reference_7
     *
     * @return $this
     */
    public function setApplicationReference7($application_reference_7)
    {
        $this->container['application_reference_7'] = $application_reference_7;

        return $this;
    }

    /**
     * Gets processing_priority_code_8
     *
     * @return string
     */
    public function getProcessingPriorityCode8()
    {
        return $this->container['processing_priority_code_8'];
    }

    /**
     * Sets processing_priority_code_8
     *
     * @param string $processing_priority_code_8 processing_priority_code_8
     *
     * @return $this
     */
    public function setProcessingPriorityCode8($processing_priority_code_8)
    {
        $this->container['processing_priority_code_8'] = $processing_priority_code_8;

        return $this;
    }

    /**
     * Gets acknowledgement_request_9
     *
     * @return string
     */
    public function getAcknowledgementRequest9()
    {
        return $this->container['acknowledgement_request_9'];
    }

    /**
     * Sets acknowledgement_request_9
     *
     * @param string $acknowledgement_request_9 acknowledgement_request_9
     *
     * @return $this
     */
    public function setAcknowledgementRequest9($acknowledgement_request_9)
    {
        $this->container['acknowledgement_request_9'] = $acknowledgement_request_9;

        return $this;
    }

    /**
     * Gets interchange_agreement_identifier_10
     *
     * @return string
     */
    public function getInterchangeAgreementIdentifier10()
    {
        return $this->container['interchange_agreement_identifier_10'];
    }

    /**
     * Sets interchange_agreement_identifier_10
     *
     * @param string $interchange_agreement_identifier_10 interchange_agreement_identifier_10
     *
     * @return $this
     */
    public function setInterchangeAgreementIdentifier10($interchange_agreement_identifier_10)
    {
        $this->container['interchange_agreement_identifier_10'] = $interchange_agreement_identifier_10;

        return $this;
    }

    /**
     * Gets test_indicator_11
     *
     * @return string
     */
    public function getTestIndicator11()
    {
        return $this->container['test_indicator_11'];
    }

    /**
     * Sets test_indicator_11
     *
     * @param string $test_indicator_11 test_indicator_11
     *
     * @return $this
     */
    public function setTestIndicator11($test_indicator_11)
    {
        $this->container['test_indicator_11'] = $test_indicator_11;

        return $this;
    }
    /**
     * Returns true if offset exists. False otherwise.
     *
     * @param integer $offset Offset
     *
     * @return boolean
     */
    public function offsetExists($offset)
    {
        return isset($this->container[$offset]);
    }

    /**
     * Gets offset.
     *
     * @param integer $offset Offset
     *
     * @return mixed
     */
    public function offsetGet($offset)
    {
        return isset($this->container[$offset]) ? $this->container[$offset] : null;
    }

    /**
     * Sets value based on offset.
     *
     * @param integer $offset Offset
     * @param mixed   $value  Value to be set
     *
     * @return void
     */
    public function offsetSet($offset, $value)
    {
        if (is_null($offset)) {
            $this->container[] = $value;
        } else {
            $this->container[$offset] = $value;
        }
    }

    /**
     * Unsets offset.
     *
     * @param integer $offset Offset
     *
     * @return void
     */
    public function offsetUnset($offset)
    {
        unset($this->container[$offset]);
    }

    /**
     * Gets the string presentation of the object
     *
     * @return string
     */
    public function __toString()
    {
        if (defined('JSON_PRETTY_PRINT')) { // use JSON pretty print
            return json_encode(
                ObjectSerializer::sanitizeForSerialization($this),
                JSON_PRETTY_PRINT
            );
        }

        return json_encode(ObjectSerializer::sanitizeForSerialization($this));
    }
}


